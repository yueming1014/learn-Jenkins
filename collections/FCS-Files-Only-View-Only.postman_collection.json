{
	"info": {
		"_postman_id": "df4823a3-ef77-4852-86c0-470d14bfd913",
		"name": "API 2.0 Perm Suite -- FCS Files Only / View Only",
		"description": "Cytobank APIs collection for testing various regression scenarios through Postman and Newman.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1.0-authenticate",
			"item": [
				{
					"name": "Authenticate Admin User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable(\"admin_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"admin_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"admin_userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"tests[\"User is Admin\"] = data.user.admin === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						},
						"description": "Same Authentication API with admin username & password picking from env variables."
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				}
			],
			"description": "Authentication API call to generate your token."
		},
		{
			"name": "2.0-experiments",
			"item": [
				{
					"name": "List Exps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"for (var i =0; i < data.experiments.length; i++){",
									"    if (data.experiments[i].experimentName == \"PBMC (Proper scales) -- API-2.0 TESTING -- FCS FILES ONLY / VIEW ONLY -- DO NOT DELETE\"){",
									"        postman.setEnvironmentVariable(\"experiment_id\", data.experiments[i].id);",
									"        postman.setEnvironmentVariable(\"exp_version\", data.experiments[i].version);",
									"        break;",
									"    }",
									"}",
									"tests[\"Body contains list of experiments\"] = data.experiments.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "List All experimetns for the user"
					},
					"response": []
				},
				{
					"name": "Exp Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"//var data = JSON.parse(responseBody);",
									"//postman.setEnvironmentVariable(\"exp_version\", data.experiment.version);",
									"var data = JSON.parse(responseBody);",
									"data.experiment.id = null;",
									"data.experiment.version = null;",
									"data.experiment.gateVersion = null;",
									"data.experiment.createdAt = null;",
									"data.experiment.updatedAt = null;",
									"data.experiment.primaryResearcherId = null;",
									"data.experiment.principalInvestigatorId = null;",
									"data.experiment.uploaderId = null;",
									"data.experiment.projectId = null;",
									"data.experiment.clonedFrom = null;",
									"var respBody = JSON.stringify(data);",
									"if (typeof environment.gold_std_expDetails_FCSOnly_response === 'undefined' || environment.gold_std_expDetails_FCSOnly_response === \"\"){",
									"    postman.setEnvironmentVariable(\"gold_std_expDetails_FCSOnly_response\", respBody);",
									"}",
									"tests[\"Body matches gold standard data\"] = respBody === environment.gold_std_expDetails_FCSOnly_response;",
									"//console.log(environment.gold_std_expDetails_response);",
									"//console.log(respBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}"
							]
						},
						"description": "Show experiemnt details for the exp id sent over request."
					},
					"response": []
				},
				{
					"name": "Create Experiment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var date = new Date();\r",
									"var time = date.getTime();\r",
									"postman.setEnvironmentVariable(\"newExpName\", \"New API test experiment-\"+time);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Experiment created successfully\"] = data !== \"\" && typeof data.experiment === 'object';",
									"postman.setEnvironmentVariable(\"new_exp_id\", data.experiment.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n      \"experimentName\": \"{{newExpName}}\",\n      \"primaryResearcherId\": {{userid}},\n      \"principalInvestigatorId\": {{userid}},\n      \"comments\": \"new api test experiemnt\",\n      \"purpose\": \"api testing\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "Create new experiment for the user."
					},
					"response": [
						{
							"name": "CreateExperiment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{user_jwt}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"experiment\":\n  {\n      \"experimentName\": \"{{newExpName}}\",\n      \"primaryResearcherId\": {{userid}},\n      \"principalInvestigatorId\": {{userid}},\n      \"comments\": \"new api test experiemnt\",\n      \"purpose\": \"api testing\"\n  }\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"experiments"
									]
								},
								"description": "Create new experiment for the user."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 18 Apr 2016 11:32:44 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"9ae9407513cbcb9d6665d852cc7dd809\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "1.329000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								},
								{
									"key": "transfer-encoding",
									"value": "chunked",
									"name": "transfer-encoding",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"experiment\":{\"id\":7598,\"version\":0,\"purpose\":\"api testing\",\"comments\":\"testing api\",\"public\":false,\"deleted\":false,\"sources\":\"\",\"experimentName\":\"New API experiment CYT-5348\",\"gateVersion\":0,\"createdAt\":\"2016-04-18T11:32:43Z\",\"updatedAt\":\"2016-04-18T11:32:43Z\",\"primaryResearcherId\":110,\"principalInvestigatorId\":2,\"uploaderId\":110,\"projectId\":null,\"clonedFrom\":null,\"createdFrom\":null,\"childType\":null,\"createdFromUrl\":null,\"publishedReportId\":null}}"
						}
					]
				},
				{
					"name": "Upload Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sessionToken\", data.sessionToken);",
									"postman.setEnvironmentVariable(\"secretAccessKey\", data.secretAccessKey);",
									"postman.setEnvironmentVariable(\"accessKeyId\", data.accessKeyId);",
									"postman.setEnvironmentVariable(\"awsRegion\", data.awsRegion);",
									"postman.setEnvironmentVariable(\"upload_bucket_name\", data.uploadBucketName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/upload/token?userId={{userid}}&experimentId={{new_exp_id}}",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"upload",
								"token"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userid}}"
								},
								{
									"key": "attachment",
									"value": "true",
									"disabled": true
								},
								{
									"key": "experimentId",
									"value": "{{new_exp_id}}"
								}
							]
						},
						"description": "The api returns AWS token and destination for uploading."
					},
					"response": []
				},
				{
					"name": "Upload FCS File to new exp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4",
							"awsv4": [
								{
									"key": "addAuthDataToQuery",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "region",
									"value": "{{awsRegion}}",
									"type": "string"
								},
								{
									"key": "sessionToken",
									"value": "{{sessionToken}}",
									"type": "string"
								},
								{
									"key": "secretKey",
									"value": "{{secretAccessKey}}",
									"type": "string"
								},
								{
									"key": "accessKey",
									"value": "{{accessKeyId}}",
									"type": "string"
								},
								{
									"key": "service",
									"value": "s3",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"disabled": true
							},
							{
								"key": "x-amz-meta-tid",
								"value": "e1bc5eee-35e2-4fd2-b926-a041d3e2a03d",
								"type": "text",
								"disabled": true
							},
							{
								"key": "x-amz-security-token",
								"value": "{{tid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text",
								"disabled": true
							},
							{
								"key": "AWSAccessKeyId",
								"value": "\"ASIAWBZY36WXVRD5VBMA\"",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "data/pbmc_allfcsfiles/pbmc_lrs005_il10.fcs"
							}
						},
						"url": {
							"raw": "https://{{upload_bucket_name}}.s3.amazonaws.com/experiments/{{new_exp_id}}/pbmc_lrs005_il10.fcs?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD",
							"protocol": "https",
							"host": [
								"{{upload_bucket_name}}",
								"s3",
								"amazonaws",
								"com"
							],
							"path": [
								"experiments",
								"{{new_exp_id}}",
								"pbmc_lrs005_il10.fcs"
							],
							"query": [
								{
									"key": "x-amz-meta-drop",
									"value": "true",
									"disabled": true
								},
								{
									"key": "X-Amz-Content-Sha256",
									"value": "UNSIGNED-PAYLOAD"
								}
							]
						},
						"description": "Upload FCS file to newly created experiment."
					},
					"response": []
				},
				{
					"name": "Upload Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/experiments/{{new_exp_id}}/upload_status",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{new_exp_id}}",
								"upload_status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"{{newExpName}} - updated\",\n    \"primaryResearcherId\":  2,\n    \"principalInvestigatorId\":  {{userid}},\n    \"projectId\":  1,\n    \"comments\":  \"Automated tests running from Postman-Newman for testing API CRUD (create, retrieve, update, delete) operations.\",\n    \"purpose\":  \"API Testing\"\n  }\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}"
							]
						},
						"description": "Update Experiment details for user."
					},
					"response": []
				},
				{
					"name": "Clone Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"clone"
							]
						},
						"description": "Clone Experiment for user, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "List FCS Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains list of fcs files\"] = data.fcsFiles.length >= 1;",
									"postman.setEnvironmentVariable(\"fcs_file_id_1\", data.fcsFiles[0].id);",
									"postman.setEnvironmentVariable(\"fcs_file_id_2\", data.fcsFiles[1].id);",
									"postman.setEnvironmentVariable(\"fcs_file_id_3\", data.fcsFiles[2].id);",
									"/*var all_fcs_file_ids = data.fcsFiles[0].id;",
									"for (var i =1; i < data.fcsFiles.length; i++){",
									"    all_fcs_file_ids = (all_fcs_file_ids +\", \"+ data.fcsFiles[i].id);",
									"}",
									"postman.setEnvironmentVariable(\"all_fcs_file_ids\", all_fcs_file_ids);",
									"for (var i =0; i < data.fcsFiles.length; i++)    {",
									"    if(data.fcsFiles[i].filename.toLowerCase().startsWith(\"comp_\")){",
									"     //console.log(data.fcsFiles[i].filename.toLowerCase().startsWith(\"comp_\"));",
									"     postman.setEnvironmentVariable(\"fcs_comp_file_id_1\", data.fcsFiles[i].id);",
									"     postman.setEnvironmentVariable(\"fcs_comp_file_id_2\", data.fcsFiles[i+1].id);",
									"     postman.setEnvironmentVariable(\"fcs_comp_file_id_3\", data.fcsFiles[i+2].id);",
									"     break;",
									"    }else{",
									"     postman.setEnvironmentVariable(\"fcs_comp_file_id_1\", data.fcsFiles[0].id);",
									"     postman.setEnvironmentVariable(\"fcs_comp_file_id_2\", data.fcsFiles[1].id);",
									"     postman.setEnvironmentVariable(\"fcs_comp_file_id_3\", data.fcsFiles[2].id);",
									"    }",
									"}",
									"",
									"for (var i = 0; i < data.fcsFiles.length; i++){",
									"    data.fcsFiles[i].id = null;",
									"    data.fcsFiles[i].experimentId = null;",
									"    data.fcsFiles[i].createdAt = null;",
									"    data.fcsFiles[i].updatedAt = null;",
									"    data.fcsFiles[i].experimentName = null;",
									"}",
									"var respBody = JSON.stringify(data);",
									"if (typeof environment.gold_std_pbmc_fcsFilesDetails === 'undefined' || environment.gold_std_pbmc_fcsFilesDetails === \"\"){",
									"    postman.setEnvironmentVariable(\"gold_std_pbmc_fcsFilesDetails\", respBody);",
									"}",
									"tests[\"Body matches gold standard data\"] = respBody === environment.gold_std_pbmc_fcsFilesDetails;",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/fcs_files",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"fcs_files"
							]
						},
						"description": "List all FCS files for the given experiment id for the user."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment with few FCS files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Few Files clone experiment\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\":  true,\n    \"cloneAnnotations\":  true,\n    \"cloneAttachments\":  true,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [{{fcs_file_id_1}}, {{fcs_file_id_2}}, {{fcs_file_id_3}}]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment with all FCS files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"All FCS Files clone experiment\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\":  false,\n    \"cloneAnnotations\":  false,\n    \"cloneAttachments\":  false,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment(All Parameters False)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Selective Clone(All Parameters False)\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\":  false,\n    \"cloneAnnotations\":  false,\n    \"cloneAttachments\":  false,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment(Clone Gates true)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Selective Clone(Clone gates True)\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\": true,\n    \"cloneAnnotations\": false,\n    \"cloneAttachments\": false,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment(Clone Annotations true)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Selective Clone(Clone Annotations True)\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\": false,\n    \"cloneAnnotations\": true,\n    \"cloneAttachments\": false,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment(Clone Attachments true)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Selective Clone(Clone Attachments True)\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\": false,\n    \"cloneAnnotations\": false,\n    \"cloneAttachments\": true,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment(Clone Reagents true)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Selective Clone(Clone Reagents True)\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\": false,\n    \"cloneAnnotations\": false,\n    \"cloneAttachments\": false,\n    \"cloneReagents\": true, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Experiment(All Parameters true)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_allfcs_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Selective Clone(All Parameters True)\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\": true,\n    \"cloneAnnotations\": true,\n    \"cloneAttachments\": true,\n    \"cloneReagents\": true, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Exp all FCS files(w/o list FCS files)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sel_cloned_exp_id\", data.experiment.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Experiment cloned successfully\"] = data !== \"\" && typeof data.experiment === 'object';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Few Files clone experiment\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\":  false,\n    \"cloneAnnotations\":  false,\n    \"cloneAttachments\":  false,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [-1]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Selective Clone Exp all FCS files(w/o list FCS files(+1))",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 422\"] = responseCode.code === 422;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"experimentName\":  \"Few Files clone experiment\",\n    \"primaryResearcherId\":  {{userid}},\n    \"principalInvestigatorId\":  {{other_usersid}},\n    \"cloneGates\":  false,\n    \"cloneAnnotations\":  false,\n    \"cloneAttachments\":  false,\n    \"cloneReagents\": false, \n    \"fcsFileIds\": [\"+1\"]\n  }\n}\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/selective_clone",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"selective_clone"
							]
						},
						"description": "Selective Clone Experiment for user based on parameteres passed in json body, provided user has access to clone it, other wise return informative error."
					},
					"response": []
				},
				{
					"name": "Trash Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"experiment\":\n  {\n    \"deleted\":  true\n  }\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}"
							]
						},
						"description": "Mark the experiment deleted and move it to the trash."
					},
					"response": []
				},
				{
					"name": "Delete Exp Permanently",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}"
							]
						},
						"description": "Delete the experiment Permanently along with all its child eperiments."
					},
					"response": []
				}
			],
			"description": "Experiments API interactions like list exps, view exp details, update exp details, create exp, clone exp, upload-download fcs files etc."
		},
		{
			"name": "2.1-fcs_files",
			"item": [
				{
					"name": "List FCS Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains list of fcs files\"] = data.fcsFiles.length >= 1;",
									"for (var i =0; i < data.fcsFiles.length; i++)",
									"{",
									"postman.setEnvironmentVariable(\"fcs_file_id_\"+[i], data.fcsFiles[i].id);",
									"postman.setEnvironmentVariable(\"fcs_file_id_\"+[i]+\"_hash\", data.fcsFiles[i].uniqueHash)",
									"}",
									"",
									"// postman.setEnvironmentVariable(\"fcs_file_id_1\", data.fcsFiles[0].id);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_1_filename\", data.fcsFiles[0].filename);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_1_hash\", data.fcsFiles[0].uniqueHash);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_2\", data.fcsFiles[1].id);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_2_filename\", data.fcsFiles[1].filename);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_2_hash\", data.fcsFiles[1].uniqueHash);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_3\", data.fcsFiles[2].id);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_3_filename\", data.fcsFiles[2].filename);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_3_hash\", data.fcsFiles[2].uniqueHash);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_4\", data.fcsFiles[5].id);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_4_filename\", data.fcsFiles[5].filename);",
									"// postman.setEnvironmentVariable(\"fcs_file_id_4_hash\", data.fcsFiles[0].uniqueHash);",
									"var all_fcs_file_ids = data.fcsFiles[0].id;",
									"for (var i =1; i < data.fcsFiles.length; i++){",
									"    all_fcs_file_ids = (all_fcs_file_ids +\", \"+ data.fcsFiles[i].id);",
									"}",
									"postman.setEnvironmentVariable(\"all_fcs_file_ids\", all_fcs_file_ids);",
									"for (var i = 0; i < data.fcsFiles.length; i++){",
									"    data.fcsFiles[i].id = null;",
									"    data.fcsFiles[i].experimentId = null;",
									"    data.fcsFiles[i].createdAt = null;",
									"    data.fcsFiles[i].updatedAt = null;",
									"    data.fcsFiles[i].experimentName = null;",
									"}",
									"var respBody = JSON.stringify(data);",
									"if (typeof environment.gold_std_pbmc_fcsFilesDetails_ds === 'undefined' || environment.gold_std_pbmc_fcsFilesDetails_ds === \"\"){",
									"    postman.setEnvironmentVariable(\"gold_std_pbmc_fcsFilesDetails_ds\", respBody);",
									"}",
									"tests[\"Body matches gold standard data\"] = respBody === environment.gold_std_pbmc_fcsFilesDetails_ds;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/fcs_files",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"fcs_files"
							]
						},
						"description": "List all FCS files for the given experiment id for the user."
					},
					"response": []
				},
				{
					"name": "FCS File Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/fcs_files/{{fcs_file_id_4}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"fcs_files",
								"{{fcs_file_id_4}}"
							]
						},
						"description": "Show FCS file details for the FCS file id for that specific exp id sent over request."
					},
					"response": []
				},
				{
					"name": "FI Comp Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"File Internal comp matrix is present\"] = data.FcsFileInternalCompensation.compensationMatrix.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/fcs_files/{{fcs_file_id_1}}/compensation",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"fcs_files",
								"{{fcs_file_id_1}}",
								"compensation"
							]
						},
						"description": "Show File Internal Compensation details for the FCS file id for that specific exp id sent over request."
					},
					"response": []
				},
				{
					"name": "FI Comp Details with file id not belonging to exp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains fcs file not found error message\"] = responseBody.has(\"Couldn't find fcsfile with ID=\"+environment.fcs_file_id_1.toString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{new_exp_id}}/fcs_files/{{fcs_file_id_1}}/compensation",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{new_exp_id}}",
								"fcs_files",
								"{{fcs_file_id_1}}",
								"compensation"
							]
						},
						"description": "Show File Internal Compensation details for the FCS file id for that specific exp id sent over request."
					},
					"response": []
				},
				{
					"name": "Generate Download URL Single FCS File Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.environment.set(\"download_single_fcs\", data.downloadUrl);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/download/url?experimentId={{experiment_id}}&hashKey={{fcs_file_id_4_hash}}&fileName={{fcs_file_id_4}}&fileType=FcsFile",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"download",
								"url"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "hashKey",
									"value": "{{fcs_file_id_4_hash}}"
								},
								{
									"key": "fileName",
									"value": "{{fcs_file_id_4}}"
								},
								{
									"key": "fileType",
									"value": "FcsFile"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Single FCS URL Copy 2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{download_single_fcs}}",
							"host": [
								"{{download_single_fcs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download zip data_service Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"zipFileName\": \"testing_api.zip\",\n  \"experimentId\": {{experiment_id}},\n  \"userId\": {{userid}},\n  \"fileList\": [\n    {\n      \"fileName\": \"{{fcs_file_id_4_filename}}\",\n      \"keyPrefix\": \"fcs_files\",\n      \"hashKey\": \"{{fcs_file_id_4_hash}}\"\n    },\n    {\n      \"fileName\": \"{{fcs_file_id_1_filename}}\",\n      \"keyPrefix\": \"fcs_files\",\n      \"hashKey\": \"{{fcs_file_id_1_hash}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/download/zip",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"download",
								"zip"
							],
							"query": [
								{
									"key": "zipFileName",
									"value": "abc.zip",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "{{userid}}",
									"disabled": true
								},
								{
									"key": "fileList",
									"value": "[{\"fileName\": \"pbmc_lrs005_il10.fcs\", \"keyPrefix\": \"fcs_files\", \"hashkey\": \"de04cb6cfa95f8309643144d7ee7c20421d1312dc9ec425d4d7c76a3f61b49d36a627b071151a7890b1a0f9e61c27c50fc2424af01d9288e2f86f6df6aa91f78\"}]",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sessionToken\", data.sessionToken);",
									"postman.setEnvironmentVariable(\"secretAccessKey\", data.secretAccessKey);",
									"postman.setEnvironmentVariable(\"accessKeyId\", data.accessKeyId);",
									"postman.setEnvironmentVariable(\"awsRegion\", data.awsRegion);",
									"postman.setEnvironmentVariable(\"upload_bucket_name\", data.uploadBucketName);",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Not Authorized To Access Resource\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/upload/token?userId={{userid}}&experimentId={{experiment_id}}",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"upload",
								"token"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userid}}"
								},
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "attachment",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "The api returns AWS token and destination for uploading."
					},
					"response": []
				},
				{
					"name": "Upload FCS File to new exp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"pm.test(\"Error code is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"AuthorizationQueryParametersError\");",
									"});",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Error parsing the X-Amz-Credential parameter\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4",
							"awsv4": [
								{
									"key": "addAuthDataToQuery",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "region",
									"value": "{{awsRegion}}",
									"type": "string"
								},
								{
									"key": "sessionToken",
									"value": "{{sessionToken}}",
									"type": "string"
								},
								{
									"key": "secretKey",
									"value": "{{secretAccessKey}}",
									"type": "string"
								},
								{
									"key": "accessKey",
									"value": "{{accessKeyId}}",
									"type": "string"
								},
								{
									"key": "service",
									"value": "s3",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"disabled": true
							},
							{
								"key": "x-amz-meta-tid",
								"value": "e1bc5eee-35e2-4fd2-b926-a041d3e2a03d",
								"type": "text",
								"disabled": true
							},
							{
								"key": "x-amz-security-token",
								"value": "{{tid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text",
								"disabled": true
							},
							{
								"key": "AWSAccessKeyId",
								"value": "\"ASIAWBZY36WXVRD5VBMA\"",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "data/pbmc_allfcsfiles/pbmc_lrs005_il10.fcs"
							}
						},
						"url": {
							"raw": "https://{{upload_bucket_name}}.s3.amazonaws.com/experiments/{{experiment_id}}/pbmc_lrs005_il10.fcs?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD",
							"protocol": "https",
							"host": [
								"{{upload_bucket_name}}",
								"s3",
								"amazonaws",
								"com"
							],
							"path": [
								"experiments",
								"{{experiment_id}}",
								"pbmc_lrs005_il10.fcs"
							],
							"query": [
								{
									"key": "x-amz-meta-drop",
									"value": "true",
									"disabled": true
								},
								{
									"key": "X-Amz-Content-Sha256",
									"value": "UNSIGNED-PAYLOAD"
								}
							]
						},
						"description": "Upload FCS file to newly created experiment."
					},
					"response": []
				},
				{
					"name": "Upload Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/experiments/{{experiment_id}}/upload_status",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"upload_status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload zip FCS File to new exp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"pm.test(\"Error code is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"AuthorizationQueryParametersError\");",
									"});",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Error parsing the X-Amz-Credential parameter\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4",
							"awsv4": [
								{
									"key": "addAuthDataToQuery",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "region",
									"value": "{{awsRegion}}",
									"type": "string"
								},
								{
									"key": "sessionToken",
									"value": "{{sessionToken}}",
									"type": "string"
								},
								{
									"key": "secretKey",
									"value": "{{secretAccessKey}}",
									"type": "string"
								},
								{
									"key": "accessKey",
									"value": "{{accessKeyId}}",
									"type": "string"
								},
								{
									"key": "service",
									"value": "s3",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"disabled": true
							},
							{
								"key": "x-amz-meta-tid",
								"value": "e1bc5eee-35e2-4fd2-b926-a041d3e2a03d",
								"type": "text",
								"disabled": true
							},
							{
								"key": "x-amz-security-token",
								"value": "{{tid}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text",
								"disabled": true
							},
							{
								"key": "AWSAccessKeyId",
								"value": "\"ASIAWBZY36WXVRD5VBMA\"",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "data/pbmc_fewfcsFiles.zip"
							}
						},
						"url": {
							"raw": "https://{{upload_bucket_name}}.s3.amazonaws.com/experiments/{{experiment_id}}/pbmc_fewfcsFiles.zip?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD",
							"protocol": "https",
							"host": [
								"{{upload_bucket_name}}",
								"s3",
								"amazonaws",
								"com"
							],
							"path": [
								"experiments",
								"{{experiment_id}}",
								"pbmc_fewfcsFiles.zip"
							],
							"query": [
								{
									"key": "x-amz-meta-drop",
									"value": "true",
									"disabled": true
								},
								{
									"key": "X-Amz-Content-Sha256",
									"value": "UNSIGNED-PAYLOAD"
								}
							]
						},
						"description": "Upload FCS file to newly created experiment."
					},
					"response": []
				}
			],
			"description": "FCS Files API interactions like list files, view file details, upload & download fcs files, download zip etc."
		},
		{
			"name": "2.2-gates",
			"item": [
				{
					"name": "List Gates for Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/gates",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"gates"
							]
						},
						"description": "List gates for an experiment"
					},
					"response": []
				},
				{
					"name": "Show Gate Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/gates/{{gate_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"gates",
								"{{gate_id}}"
							]
						},
						"description": "Show a specific gate for an experiment"
					},
					"response": []
				}
			],
			"description": "List gates and show specific gate details for an experiment."
		},
		{
			"name": "2.3-populations",
			"item": [
				{
					"name": "List Populations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/populations",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"populations"
							]
						},
						"description": "List populations for an experiment"
					},
					"response": []
				},
				{
					"name": "Show Population Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/populations/{{population_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"populations",
								"{{population_id}}"
							]
						},
						"description": "Show details of a specific population for an experiment."
					},
					"response": []
				}
			],
			"description": "List and show details of a population for an experiment."
		},
		{
			"name": "2.4-gatingML",
			"item": [
				{
					"name": "Download gatingML",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/download_gatingml",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"download_gatingml"
							]
						},
						"description": "Download gatingML from experiment"
					},
					"response": []
				},
				{
					"name": "Upload gatingML",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains not authorized error message\"] = responseBody.has(\"Not Authorized To Access Resource\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "data/CytExp_7608_Gates_v1.xml"
								}
							]
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/upload_gatingml",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"upload_gatingml"
							]
						},
						"description": "Upload gatingml to an experiment."
					},
					"response": []
				}
			],
			"description": "Download and upload gatimgML from/to experiment."
		},
		{
			"name": "3.0-attachments",
			"item": [
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Get attachments experiment information dynamically",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"for (var i =0; i < data.experiments.length; i++){",
									"    if (data.experiments[i].experimentName == 'PBMC (Proper scales) -- API-2.0 TESTING -- FCS FILES ONLY / VIEW ONLY -- DO NOT DELETE'){",
									"        postman.setEnvironmentVariable(\"experiment_id\", data.experiments[i].id);",
									"        postman.setEnvironmentVariable(\"exp_version\", data.experiments[i].version);",
									"        postman.setEnvironmentVariable(\"experiment_version\", data.experiments[i].version);",
									"        break;",
									"    }",
									"}",
									"tests[\"Body contains experiments\"] = data.experiments.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "List All experimetns for the user"
					},
					"response": []
				},
				{
					"name": "Upload Token for attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"sessionToken\", data.sessionToken);",
									"postman.setEnvironmentVariable(\"secretAccessKey\", data.secretAccessKey);",
									"postman.setEnvironmentVariable(\"accessKeyId\", data.accessKeyId);",
									"postman.setEnvironmentVariable(\"awsRegion\", data.awsRegion);",
									"postman.setEnvironmentVariable(\"upload_bucket_name\", data.uploadBucketName);",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Not Authorized To Access Resource\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/upload/token?userId={{userid}}&experimentId={{experiment_id}}",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"upload",
								"token"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userid}}"
								},
								{
									"key": "attachment",
									"value": "true",
									"disabled": true
								},
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								}
							]
						},
						"description": "The api returns AWS token and destination for uploading."
					},
					"response": []
				},
				{
					"name": "Upload Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"pm.test(\"Error code is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"AuthorizationQueryParametersError\");",
									"});",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Error parsing the X-Amz-Credential parameter\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "awsv4",
							"awsv4": [
								{
									"key": "addAuthDataToQuery",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "region",
									"value": "{{awsRegion}}",
									"type": "string"
								},
								{
									"key": "sessionToken",
									"value": "{{sessionToken}}",
									"type": "string"
								},
								{
									"key": "secretKey",
									"value": "{{secretAccessKey}}",
									"type": "string"
								},
								{
									"key": "accessKey",
									"value": "{{accessKeyId}}",
									"type": "string"
								},
								{
									"key": "service",
									"value": "s3",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"disabled": true
							},
							{
								"key": "x-amz-meta-tid",
								"type": "text",
								"value": "e1bc5eee-35e2-4fd2-b926-a041d3e2a03d",
								"disabled": true
							},
							{
								"key": "x-amz-security-token",
								"type": "text",
								"value": "{{tid}}",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream",
								"disabled": true
							},
							{
								"key": "AWSAccessKeyId",
								"type": "text",
								"value": "\"ASIAWBZY36WXVRD5VBMA\"",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": "data/demo1.txt"
								}
							]
						},
						"url": {
							"raw": "https://{{upload_bucket_name}}.s3.amazonaws.com/experiments/{{experiment_id}}/demo1.txt",
							"protocol": "https",
							"host": [
								"{{upload_bucket_name}}",
								"s3",
								"amazonaws",
								"com"
							],
							"path": [
								"experiments",
								"{{experiment_id}}",
								"demo1.txt"
							],
							"query": [
								{
									"key": "x-amz-meta-attachment",
									"value": "true",
									"disabled": true
								},
								{
									"key": "X-Amz-Content-Sha256",
									"value": "UNSIGNED-PAYLOAD",
									"disabled": true
								},
								{
									"key": "attachment",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "Upload FCS file to newly created experiment."
					},
					"response": []
				},
				{
					"name": "Upload Status attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/experiments/{{experiment_id}}/upload_status",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"upload_status"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"attachment_id\", data.attachments[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/attachments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"attachments"
							]
						},
						"description": "List attachments for an experiment."
					},
					"response": [
						{
							"name": "dev01_7532_list-attch",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{USERJWT}}"
									}
								],
								"url": {
									"raw": "{{HTTP_PROTOCOL}}://{{CYTO_SERVER}}/cytobank/api/v1/experiments/7532/attachments",
									"protocol": "{{HTTP_PROTOCOL}}",
									"host": [
										"{{CYTO_SERVER}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"experiments",
										"7532",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Fri, 13 May 2016 08:22:56 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"285bd398ba6162d13cbf20634743e0f5\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.182000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								},
								{
									"key": "transfer-encoding",
									"value": "chunked",
									"name": "transfer-encoding",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"attachments\":[{\"id\":9509,\"filename\":\"Cytobank-Training_Datasets.pptx\",\"size\":1824744,\"description\":null,\"type\":null,\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9510,\"filename\":\"Science_Bendall_et_al_Public_Version_Subset_of_data.Jan_29_2013.SPADE_Trees.20130206_1623.zip\",\"size\":18861883,\"description\":null,\"type\":null,\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9511,\"filename\":\"experiment_3492_bendall_subset.acs\",\"size\":60739024,\"description\":\"Original ACS File that this experiment was created from.\",\"type\":\"UserAttachment\",\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9516,\"filename\":\"experiment_7532_illustration_35237_comped_events.zip\",\"size\":86335385,\"description\":null,\"type\":\"ExportAttachment\",\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9517,\"filename\":\"experiment_7532_illustration_35237_comped_fcs_files.zip\",\"size\":40401828,\"description\":null,\"type\":\"ExportAttachment\",\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9518,\"filename\":\"Science,_Bendall_et_al_(Public_Version)_-_Subset_of_data_(Clone)_(Clone)_Exported_Stats_Jan-20-2015_02-49-AM.csv.zip\",\"size\":4913,\"description\":\"Exported statistics from experiment 'Science, Bendall et al (Public Version) - Subset of data (Clone) (Clone)'.\",\"type\":\"ExportAttachment\",\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9519,\"filename\":\"experiment_7532_Jan-20-2015_02-51-AM.acs\",\"size\":187471891,\"description\":\"Exported ACS file.\",\"type\":\"ExportAttachment\",\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null},{\"id\":9520,\"filename\":\"experiment_7532_Jan-20-2015_02-53-AM.acs\",\"size\":297578703,\"description\":\"Exported ACS file.\",\"type\":\"ExportAttachment\",\"experimentId\":7532,\"uploadedById\":75,\"mimeType\":null}]}"
						}
					]
				},
				{
					"name": "Show Attachment Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/attachments/{{attachment_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"attachments",
								"{{attachment_id}}"
							]
						},
						"description": "Show details of a specific attachment for an experiment."
					},
					"response": []
				},
				{
					"name": "Generate Download URL Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"pm.environment.set(\"download_single_fcs\", data.downloadUrl);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://qa-titan-api.cytobank.org/api/v1/download/url?experimentId={{experiment_id}}&hashKey={{attachment_hash}}&fileName={{attachment_name}}&fileType=Attachment",
							"protocol": "https",
							"host": [
								"qa-titan-api",
								"cytobank",
								"org"
							],
							"path": [
								"api",
								"v1",
								"download",
								"url"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "hashKey",
									"value": "{{attachment_hash}}"
								},
								{
									"key": "fileName",
									"value": "{{attachment_name}}"
								},
								{
									"key": "fileType",
									"value": "Attachment"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Attachment data service",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{download_single_fcs}}",
							"host": [
								"{{download_single_fcs}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Throws correct error message for 'Non Full Access' user for delete attachment\"] = data.errors[0] === \"Not Authorized To Access Resource\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/attachments/{{attachment_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"attachments",
								"{{attachment_id}}"
							]
						},
						"description": "Delete a specific attachment for an experiment."
					},
					"response": []
				}
			],
			"description": "Listing, detailing attachment by id, downloading/uploaidng attachments from an experiemnt etc."
		},
		{
			"name": "4.0-compensations",
			"item": [
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Get compensations experiment information dynamically",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"for (var i =0; i < data.experiments.length; i++){",
									"    if (data.experiments[i].experimentName == 'PBMC (Proper scales) -- API-2.0 TESTING -- FCS FILES ONLY / VIEW ONLY -- DO NOT DELETE'){",
									"        postman.setEnvironmentVariable(\"experiment_id\", data.experiments[i].id);",
									"        postman.setEnvironmentVariable(\"exp_version\", data.experiments[i].version);",
									"        postman.setEnvironmentVariable(\"experiment_version\", data.experiments[i].version);",
									"        break;",
									"    }",
									"}",
									"tests[\"Body contains experiments\"] = data.experiments.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "List All experimetns for the user"
					},
					"response": []
				},
				{
					"name": "List Compensations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"compensation_id\", data.compensations[0].id);",
									"",
									"",
									"// gold standard for compensations?",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"compensations\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"id\": {",
									"            \"type\": \"integer\"",
									"          },",
									"          \"name\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"sources\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"name\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"id\": {",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"shortName\": {",
									"                  \"type\": \"string\"",
									"                }",
									"              },",
									"              \"required\": [",
									"                \"name\",",
									"                \"id\",",
									"                \"shortName\"",
									"              ]",
									"            }",
									"          },",
									"          \"detectors\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"name\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"id\": {",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"shortName\": {",
									"                  \"type\": \"string\"",
									"                }",
									"              },",
									"              \"required\": [",
									"                \"name\",",
									"                \"id\",",
									"                \"shortName\"",
									"              ]",
									"            }",
									"          },",
									"          \"compensationMatrix\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"array\",",
									"              \"items\": {",
									"                \"type\": \"number\"",
									"              }",
									"            }",
									"          },",
									"          \"experimentId\": {",
									"            \"type\": \"integer\"",
									"          },",
									"          \"createdAt\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"updatedAt\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"creationMethodType\": {",
									"            \"type\": \"integer\"",
									"          }",
									"        },",
									"        \"required\": [",
									"          \"id\",",
									"          \"name\",",
									"          \"sources\",",
									"          \"detectors\",",
									"          \"compensationMatrix\",",
									"          \"experimentId\",",
									"          \"createdAt\",",
									"          \"updatedAt\",",
									"          \"creationMethodType\"",
									"        ]",
									"      }",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"compensations\"",
									"  ]",
									"}",
									"",
									"tests[\"Validate compensations schema\"] = tv4.validate(data, schema);",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/compensations",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"compensations"
							]
						},
						"description": "List all compensations for the given experiment id for the user."
					},
					"response": []
				},
				{
					"name": "Show Compensation Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"compensation\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"name\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"sources\": {",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"name\": {",
									"                \"type\": \"string\"",
									"              },",
									"              \"id\": {",
									"                \"type\": \"integer\"",
									"              },",
									"              \"shortName\": {",
									"                \"type\": \"string\"",
									"              }",
									"            },",
									"            \"required\": [",
									"              \"name\",",
									"              \"id\",",
									"              \"shortName\"",
									"            ]",
									"          }",
									"        },",
									"        \"detectors\": {",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"name\": {",
									"                \"type\": \"string\"",
									"              },",
									"              \"id\": {",
									"                \"type\": \"integer\"",
									"              },",
									"              \"shortName\": {",
									"                \"type\": \"string\"",
									"              }",
									"            },",
									"            \"required\": [",
									"              \"name\",",
									"              \"id\",",
									"              \"shortName\"",
									"            ]",
									"          }",
									"        },",
									"        \"compensationMatrix\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"array\",",
									"              \"items\": {",
									"                \"type\": \"number\"",
									"              }",
									"            }",
									"          },",
									"        \"experimentId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"creationMethodType\": {",
									"          \"type\": \"integer\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"name\",",
									"        \"sources\",",
									"        \"detectors\",",
									"        \"compensationMatrix\",",
									"        \"experimentId\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"creationMethodType\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"compensation\"",
									"  ]",
									"}",
									"",
									"tests[\"Validate individual compensation schema\"] = tv4.validate(data, schema);",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/compensations/{{compensation_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"compensations",
								"{{compensation_id}}"
							]
						},
						"description": "Show details of specific compensation for the given experiment id for the user."
					},
					"response": []
				}
			],
			"description": "List, show details of compensations for an experiment."
		},
		{
			"name": "5.0-panels",
			"item": [
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Get panels experiment information dynamically",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"for (var i =0; i < data.experiments.length; i++){",
									"    if (data.experiments[i].experimentName == 'PBMC (Proper scales) -- API-2.0 TESTING -- FCS FILES ONLY / VIEW ONLY -- DO NOT DELETE'){",
									"        postman.setEnvironmentVariable(\"experiment_id\", data.experiments[i].id);",
									"        postman.setEnvironmentVariable(\"exp_version\", data.experiments[i].version);",
									"        postman.setEnvironmentVariable(\"experiment_version\", data.experiments[i].version);",
									"        break;",
									"    }",
									"}",
									"tests[\"Body contains experiments\"] = data.experiments.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "List All experimetns for the user"
					},
					"response": []
				},
				{
					"name": "List Panels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"panel_id\", data.panels[0].id);",
									"postman.setEnvironmentVariable(\"panel_1_channel_id_1\", data.panels[0].channels[0].normalizedShortNameId);",
									"postman.setEnvironmentVariable(\"panel_1_channel_id_2\", data.panels[0].channels[1].normalizedShortNameId);",
									"tests[\"Body contains panels\"] = data.panels.length >= 1;",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"panels\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"id\": {",
									"            \"type\": \"integer\"",
									"          },",
									"          \"name\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"channels\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"shortName\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"longName\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"normalizedShortNameId\": {",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"fcsFileChannelIndex\": {",
									"                  \"type\": \"integer\"",
									"                }",
									"              },",
									"              \"required\": [",
									"                \"shortName\",",
									"                \"longName\",",
									"                \"normalizedShortNameId\",",
									"                \"fcsFileChannelIndex\"",
									"              ]",
									"            }",
									"          },",
									"          \"fcsFiles\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"integer\"",
									"            }",
									"          },",
									"          \"panelChannelMappings\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"uniqueChannelOrders\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"type\": \"array\",",
									"                  \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                      \"id\": {",
									"                        \"type\": \"integer\"",
									"                      },",
									"                      \"shortName\": {",
									"                        \"type\": \"string\"",
									"                      },",
									"                      \"longName\": {",
									"                        \"type\": \"string\"",
									"                      },",
									"                      \"normalizedShortNameId\": {",
									"                        \"type\": \"integer\"",
									"                      },",
									"                      \"fcsFileChannelIndex\": {",
									"                        \"type\": \"integer\"",
									"                      }",
									"                    },",
									"                    \"required\": [",
									"                      \"id\",",
									"                      \"shortName\",",
									"                      \"longName\",",
									"                      \"normalizedShortNameId\",",
									"                      \"fcsFileChannelIndex\"",
									"                    ]",
									"                  }",
									"                }",
									"              },",
									"              \"fcsFileToChannelsMap\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {}",
									"              }",
									"            },",
									"            \"required\": [",
									"              \"uniqueChannelOrders\",",
									"              \"fcsFileToChannelsMap\"",
									"            ]",
									"          }",
									"        },",
									"        \"required\": [",
									"          \"id\",",
									"          \"name\",",
									"          \"channels\",",
									"          \"fcsFiles\",",
									"          \"panelChannelMappings\"",
									"        ]",
									"      }",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"panels\"",
									"  ]",
									"}",
									"",
									"tests[\"Validate panels schema\"] = tv4.validate(data, schema);",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/panels",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"panels"
							]
						},
						"description": "List panels for an experiment"
					},
					"response": []
				},
				{
					"name": "Show Panel Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/panels/{{panel_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"panels",
								"{{panel_id}}"
							]
						},
						"description": "Show a specific panel for an experiment"
					},
					"response": []
				}
			],
			"description": "To list provide details of experiment panels"
		},
		{
			"name": "6.0-scales",
			"item": [
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Get scales experiment information dynamically",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"for (var i =0; i < data.experiments.length; i++){",
									"    if (data.experiments[i].experimentName == 'PBMC (Proper scales) -- API-2.0 TESTING -- FCS FILES ONLY / VIEW ONLY -- DO NOT DELETE'){",
									"        postman.setEnvironmentVariable(\"experiment_id\", data.experiments[i].id);",
									"        postman.setEnvironmentVariable(\"exp_version\", data.experiments[i].version);",
									"        postman.setEnvironmentVariable(\"experiment_version\", data.experiments[i].version);",
									"        break;",
									"    }",
									"}",
									"tests[\"Body contains experiments\"] = data.experiments.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "List All experimetns for the user"
					},
					"response": []
				},
				{
					"name": "List Scales for Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Throws correct error message for 'FCS Files Only' project member for list scales\"] = data.errors[0] === \"Not Authorized To Access Resource\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/scales",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"scales"
							]
						},
						"description": "List scales for an experiment"
					},
					"response": [
						{
							"name": "listScales",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{USERJWT}}"
									}
								],
								"url": {
									"raw": "{{HTTP_PROTOCOL}}://{{CYTO_SERVER}}/cytobank/api/v1/experiments/{{experiment_id}}/scales",
									"protocol": "{{HTTP_PROTOCOL}}",
									"host": [
										"{{CYTO_SERVER}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"experiments",
										"{{experiment_id}}",
										"scales"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 19 Apr 2016 14:15:25 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "\"434ad16a93e48ab0c209ff3d23b4f44f\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "X-Runtime",
									"value": "0.657000",
									"name": "X-Runtime",
									"description": "Custom header"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": "Custom header"
								},
								{
									"key": "transfer-encoding",
									"value": "chunked",
									"name": "transfer-encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"body": "{\"scales\":[{\"id\":67070,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":17,\"scaleType\":4},{\"id\":67071,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":15,\"scaleType\":4},{\"id\":67072,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":20,\"scaleType\":4},{\"id\":67073,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":21,\"scaleType\":4},{\"id\":67074,\"minimum\":1.0,\"maximum\":262144.0,\"cofactor\":1,\"experimentId\":7586,\"normalizedShortNameId\":1,\"scaleType\":1},{\"id\":67075,\"minimum\":1.0,\"maximum\":262144.0,\"cofactor\":1,\"experimentId\":7586,\"normalizedShortNameId\":2,\"scaleType\":1},{\"id\":67076,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":22,\"scaleType\":4},{\"id\":67077,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":24,\"scaleType\":4},{\"id\":67078,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":13,\"scaleType\":4},{\"id\":67079,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":19,\"scaleType\":4},{\"id\":67080,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":18,\"scaleType\":4},{\"id\":67081,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":14,\"scaleType\":4},{\"id\":67082,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":23,\"scaleType\":4},{\"id\":67083,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":25,\"scaleType\":4},{\"id\":67084,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":26,\"scaleType\":4},{\"id\":67085,\"minimum\":-200.0,\"maximum\":262144.0,\"cofactor\":150,\"experimentId\":7586,\"normalizedShortNameId\":27,\"scaleType\":4},{\"id\":67086,\"minimum\":1.0,\"maximum\":262144.0,\"cofactor\":1,\"experimentId\":7586,\"normalizedShortNameId\":4,\"scaleType\":1},{\"id\":67087,\"minimum\":1.0,\"maximum\":262144.0,\"cofactor\":1,\"experimentId\":7586,\"normalizedShortNameId\":16,\"scaleType\":1}]}"
						}
					]
				},
				{
					"name": "Show Specific Scale Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Throws correct error message for 'FCS Files Only' project member for show specific scale\"] = data.errors[0] === \"Not Authorized To Access Resource\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/scales/{{scale_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"scales",
								"{{scale_id}}"
							]
						},
						"description": "Show a specific scale details for an experiment"
					},
					"response": []
				},
				{
					"name": "Update Scale (subset of params)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Throws correct error message for 'FCS Files Only' project member for update scales\"] = data.errors[0] === \"Not Authorized To Access Resource\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"scale\": {\n    \"minimum\": 200.5,\n    \"cofactor\": 10,\n    \"scaleType\": 2\n  }\n}\n\n"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/scales/{{scale_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"scales",
								"{{scale_id}}"
							]
						},
						"description": "Update one or more scale attributes"
					},
					"response": []
				},
				{
					"name": "Update Scale (all scale attributes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Throws correct error message for 'FCS Files Only' project member for update scales\"] = data.errors[0] === \"Not Authorized To Access Resource\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"scale\": {\n    \"minimum\": -200.0,\n    \"maximum\": 262144.0,\n    \"cofactor\": 1,\n    \"scaleType\": 4\n  }\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/scales/{{scale_id}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"scales",
								"{{scale_id}}"
							]
						},
						"description": "Update all scale attributes"
					},
					"response": []
				}
			]
		},
		{
			"name": "7.0-statistics",
			"item": [
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Get statistics experiment information dynamically",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"for (var i =0; i < data.experiments.length; i++){",
									"    if (data.experiments[i].experimentName == 'True Statistics Test -- API-2.0 TESTING -- FCS FILES ONLY / VIEW ONLY -- DO NOT DELETE'){",
									"        postman.setEnvironmentVariable(\"experiment_id\", data.experiments[i].id);",
									"        postman.setEnvironmentVariable(\"exp_version\", data.experiments[i].version);",
									"        postman.setEnvironmentVariable(\"experiment_version\", data.experiments[i].version);",
									"        break;",
									"    }",
									"}",
									"tests[\"Body contains experiments\"] = data.experiments.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments"
							]
						},
						"description": "List All experimetns for the user"
					},
					"response": []
				},
				{
					"name": "Get FCS file details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"tests[\"Body contains list of fcs files\"] = data.fcsFiles.length >= 1;",
									"postman.setEnvironmentVariable(\"fcs_file_id_1\", data.fcsFiles[0].id);",
									"postman.setEnvironmentVariable(\"fcs_file_id_2\", data.fcsFiles[1].id);",
									"postman.setEnvironmentVariable(\"fcs_file_id_3\", data.fcsFiles[2].id);",
									"var all_fcs_file_ids = data.fcsFiles[0].id;",
									"for (var i =1; i < data.fcsFiles.length; i++){",
									"    all_fcs_file_ids = (all_fcs_file_ids +\", \"+ data.fcsFiles[i].id);",
									"}",
									"postman.setEnvironmentVariable(\"all_fcs_file_ids\", all_fcs_file_ids);",
									"for (var i = 0; i < data.fcsFiles.length; i++){",
									"    data.fcsFiles[i].id = null;",
									"    data.fcsFiles[i].experimentId = null;",
									"    data.fcsFiles[i].createdAt = null;",
									"    data.fcsFiles[i].updatedAt = null;",
									"    data.fcsFiles[i].experimentName = null;",
									"}",
									"var respBody = JSON.stringify(data);",
									"if (typeof environment.gold_std_pbmc_fcsFilesDetails === 'undefined' || environment.gold_std_pbmc_fcsFilesDetails === \"\"){",
									"    postman.setEnvironmentVariable(\"gold_std_pbmc_fcsFilesDetails\", respBody);",
									"}",
									"tests[\"Body matches gold standard data\"] = respBody === environment.gold_std_pbmc_fcsFilesDetails;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/fcs_files",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"fcs_files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get panel details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"panel_id\", data.panels[0].id);",
									"postman.setEnvironmentVariable(\"panel_1_channel_id_1\", data.panels[0].channels[0].normalizedShortNameId);",
									"postman.setEnvironmentVariable(\"panel_1_channel_id_2\", data.panels[0].channels[1].normalizedShortNameId);",
									"tests[\"Body contains panels\"] = data.panels.length >= 1;",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"panels\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"id\": {",
									"            \"type\": \"integer\"",
									"          },",
									"          \"name\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"channels\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"shortName\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"longName\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"normalizedShortNameId\": {",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"fcsFileChannelIndex\": {",
									"                  \"type\": \"integer\"",
									"                }",
									"              },",
									"              \"required\": [",
									"                \"shortName\",",
									"                \"longName\",",
									"                \"normalizedShortNameId\",",
									"                \"fcsFileChannelIndex\"",
									"              ]",
									"            }",
									"          },",
									"          \"fcsFiles\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"integer\"",
									"            }",
									"          },",
									"          \"panelChannelMappings\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"uniqueChannelOrders\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"type\": \"array\",",
									"                  \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                      \"id\": {",
									"                        \"type\": \"integer\"",
									"                      },",
									"                      \"shortName\": {",
									"                        \"type\": \"string\"",
									"                      },",
									"                      \"longName\": {",
									"                        \"type\": \"string\"",
									"                      },",
									"                      \"normalizedShortNameId\": {",
									"                        \"type\": \"integer\"",
									"                      },",
									"                      \"fcsFileChannelIndex\": {",
									"                        \"type\": \"integer\"",
									"                      }",
									"                    },",
									"                    \"required\": [",
									"                      \"id\",",
									"                      \"shortName\",",
									"                      \"longName\",",
									"                      \"normalizedShortNameId\",",
									"                      \"fcsFileChannelIndex\"",
									"                    ]",
									"                  }",
									"                }",
									"              },",
									"              \"fcsFileToChannelsMap\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {}",
									"              }",
									"            },",
									"            \"required\": [",
									"              \"uniqueChannelOrders\",",
									"              \"fcsFileToChannelsMap\"",
									"            ]",
									"          }",
									"        },",
									"        \"required\": [",
									"          \"id\",",
									"          \"name\",",
									"          \"channels\",",
									"          \"fcsFiles\",",
									"          \"panelChannelMappings\"",
									"        ]",
									"      }",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"panels\"",
									"  ]",
									"}",
									"",
									"tests[\"Validate panels schema\"] = tv4.validate(data, schema);",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/panels",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"panels"
							]
						},
						"description": "List panels for an experiment"
					},
					"response": []
				},
				{
					"name": "Get compensation details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"compensation_id\", -1);",
									"",
									"",
									"// gold standard for compensations?",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"compensations\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"id\": {",
									"            \"type\": \"integer\"",
									"          },",
									"          \"name\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"sources\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"name\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"id\": {",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"shortName\": {",
									"                  \"type\": \"string\"",
									"                }",
									"              },",
									"              \"required\": [",
									"                \"name\",",
									"                \"id\",",
									"                \"shortName\"",
									"              ]",
									"            }",
									"          },",
									"          \"detectors\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"name\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"id\": {",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"shortName\": {",
									"                  \"type\": \"string\"",
									"                }",
									"              },",
									"              \"required\": [",
									"                \"name\",",
									"                \"id\",",
									"                \"shortName\"",
									"              ]",
									"            }",
									"          },",
									"          \"compensationMatrix\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"type\": \"array\",",
									"              \"items\": {",
									"                \"type\": \"number\"",
									"              }",
									"            }",
									"          },",
									"          \"experimentId\": {",
									"            \"type\": \"integer\"",
									"          },",
									"          \"createdAt\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"updatedAt\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"creationMethodType\": {",
									"            \"type\": \"integer\"",
									"          }",
									"        },",
									"        \"required\": [",
									"          \"id\",",
									"          \"name\",",
									"          \"sources\",",
									"          \"detectors\",",
									"          \"compensationMatrix\",",
									"          \"experimentId\",",
									"          \"createdAt\",",
									"          \"updatedAt\",",
									"          \"creationMethodType\"",
									"        ]",
									"      }",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"compensations\"",
									"  ]",
									"}",
									"",
									"tests[\"Validate compensations schema\"] = tv4.validate(data, schema);",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/experiments/{{experiment_id}}/compensations",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"experiments",
								"{{experiment_id}}",
								"compensations"
							]
						},
						"description": "List all compensations for the given experiment id for the user."
					},
					"response": []
				},
				{
					"name": "Show statistics (for specific channels) -- single file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema =  {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"populationIdentifierKey\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"experimentId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateVersion\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"compensationId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"fcsFileId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateSetId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"eventCount\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"minimums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"maximums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"means\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"medians\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"variances\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"standardDeviations\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"secondPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"ninetyEighthPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"channelShortNameIds\": {",
									"      \"type\": \"array\",",
									"      \"items\": {}",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"populationIdentifierKey\",",
									"    \"experimentId\",",
									"    \"gateVersion\",",
									"    \"compensationId\",",
									"    \"fcsFileId\",",
									"    \"gateSetId\",",
									"    \"eventCount\",",
									"    \"minimums\",",
									"    \"maximums\",",
									"    \"means\",",
									"    \"medians\",",
									"    \"variances\",",
									"    \"standardDeviations\",",
									"    \"secondPercentiles\",",
									"    \"ninetyEighthPercentiles\",",
									"    \"channelShortNameIds\"",
									"  ]",
									"}",
									"",
									"// get channel ids",
									"/*var channel1_id = data[0].channelShortNameIds[0];",
									"var channel2_id = data[0].channelShortNameIds[1];",
									"",
									"for (var i =0; i < data.length; i++)",
									"{",
									"    var range = data[i].minimums[channel1_id];",
									"    switch (range)",
									"    {",
									"        ",
									"        case -10000:",
									"        {",
									"            ",
									"            if (data[i].maximums[channel1_id] === 10000)",
									"            {",
									"                tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"                console.log(tv4.error);",
									"                // -10k to 10k",
									"                tests[\"-10k to 10k minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -10000 && ",
									"                    data[i].minimums[channel2_id] === -10000;",
									"            ",
									"                tests[\"-10k to 10k maximums\"] = ",
									"                    data[i].maximums[channel1_id] === 10000 && ",
									"                    data[i].maximums[channel2_id] === 10000;",
									"                ",
									"                tests[\"-10k to 10k means\"] = ",
									"                    data[i].means[channel1_id] === 0 && ",
									"                    data[i].means[channel2_id] === 0;",
									"                ",
									"                tests[\"-10k to 10k medians\"] = ",
									"                    data[i].medians[channel1_id] === 0 && ",
									"                    data[i].medians[channel2_id] === 0;",
									"                ",
									"                tests[\"-10k to 10k variances\"] = ",
									"                    data[i].variances[channel1_id] === 13098578.282777773 && ",
									"                    data[i].variances[channel2_id] === 13098578.282777773;",
									"                ",
									"                tests[\"-10k to 10k standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 3619.195806084243 && ",
									"                    data[i].standardDeviations[channel2_id] === 3619.195806084243;",
									"                ",
									"                tests[\"-10k to 10k second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -9120 && ",
									"                    data[i].secondPercentiles[channel2_id] === -9120;",
									"                ",
									"                tests[\"-10k to 10k ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === 9119.999999999998 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === 9119.999999999998;",
									"                break;",
									"            }",
									"            else",
									"            {",
									"                tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"                console.log(tv4.error);   ",
									"                // -5k to -10k",
									"                tests[\"-5k to -10k minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -10000 && ",
									"                    data[i].minimums[channel2_id] === -10000;",
									"                ",
									"                tests[\"-5k to -10k maximums\"] = ",
									"                    data[i].maximums[channel1_id] === -5000 && ",
									"                    data[i].maximums[channel2_id] === -5000;",
									"                ",
									"                tests[\"-5k to -10k means\"] = ",
									"                    data[i].means[channel1_id] === -7500 && ",
									"                    data[i].means[channel2_id] === -7500;",
									"                ",
									"                tests[\"-5k to -10k medians\"] = ",
									"                    data[i].medians[channel1_id] === -7500 && ",
									"                    data[i].medians[channel2_id] === -7500;",
									"                ",
									"                tests[\"-5k to -10k variances\"] = ",
									"                    data[i].variances[channel1_id] === 2104166.6666666665 && ",
									"                    data[i].variances[channel2_id] === 2104166.6666666665;",
									"                ",
									"                tests[\"-5k to -10k standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 1450.574598794101 && ",
									"                    data[i].standardDeviations[channel2_id] === 1450.574598794101;",
									"                ",
									"                tests[\"-5k to -10k second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -9924 && ",
									"                    data[i].secondPercentiles[channel2_id] === -9924;",
									"                ",
									"                tests[\"-5k to -10k ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === -5076 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === -5076;",
									"                break;",
									"            }",
									"        }",
									"            ",
									"        case -1000:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -500 to -1000",
									"            tests[\"-500 to -1k minimums\"] = ",
									"                data[i].minimums[channel1_id] === -1000 && ",
									"                data[i].minimums[channel2_id] === -1000;",
									"            ",
									"            tests[\"-500 to -1k maximums\"] = ",
									"                data[i].maximums[channel1_id] === -500 && ",
									"                data[i].maximums[channel2_id] === -500;",
									"            ",
									"            tests[\"-500 to -1k means\"] = ",
									"                data[i].means[channel1_id] === -750 && ",
									"                data[i].means[channel2_id] === -750;",
									"            ",
									"            tests[\"-500 to -1k medians\"] = ",
									"                data[i].medians[channel1_id] === -750 && ",
									"                data[i].medians[channel2_id] === -750;",
									"            ",
									"            tests[\"-500 to -1k variances\"] = ",
									"                data[i].variances[channel1_id] === 21041.666666666668 && ",
									"                data[i].variances[channel2_id] === 21041.666666666668;",
									"            ",
									"            tests[\"-500 to -1k standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 145.0574598794101 && ",
									"                data[i].standardDeviations[channel2_id] === 145.0574598794101;",
									"            ",
									"            tests[\"-500 to -1k second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -992.4 && ",
									"                data[i].secondPercentiles[channel2_id] === -992.4;",
									"            ",
									"            tests[\"-500 to -1k ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === -507.59999999999997 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === -507.59999999999997;",
									"            break;",
									"        }",
									"        ",
									"        case -100:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -50 to -100",
									"            tests[\"-50 to -100 minimums\"] = ",
									"                data[i].minimums[channel1_id] === -100 && ",
									"                data[i].minimums[channel2_id] === -100;",
									"            ",
									"            tests[\"-50 to -100 maximums\"] = ",
									"                data[i].maximums[channel1_id] === -50 && ",
									"                data[i].maximums[channel2_id] === -50;",
									"            ",
									"            tests[\"-50 to -100 means\"] = ",
									"                data[i].means[channel1_id] === -75 && ",
									"                data[i].means[channel2_id] === -75;",
									"            ",
									"            tests[\"-50 to -100 medians\"] = ",
									"                data[i].medians[channel1_id] === -75 && ",
									"                data[i].medians[channel2_id] === -75;",
									"            ",
									"            tests[\"-50 to -100 variances\"] = ",
									"                data[i].variances[channel1_id] === 210.41666666666666 && ",
									"                data[i].variances[channel2_id] === 210.41666666666666;",
									"            ",
									"            tests[\"-50 to -100 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 14.505745987941008 && ",
									"                data[i].standardDeviations[channel2_id] === 14.505745987941008;",
									"            ",
									"            tests[\"-50 to -100 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -99.24 && ",
									"                data[i].secondPercentiles[channel2_id] === -99.24;",
									"            ",
									"            tests[\"-50 to -100 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === -50.76 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === -50.76;",
									"            break;",
									"        }",
									"            ",
									"        case -10:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -5 to -10",
									"            tests[\"-5 to -10 minimums\"] = ",
									"                data[i].minimums[channel1_id] === -10 && ",
									"                data[i].minimums[channel2_id] === -10;",
									"            ",
									"            tests[\"-5 to -10 maximums\"] = ",
									"                data[i].maximums[channel1_id] === -5 && ",
									"                data[i].maximums[channel2_id] === -5;",
									"            ",
									"            tests[\"-5 to -10 means\"] = ",
									"                data[i].means[channel1_id] === -7.5 && ",
									"                data[i].means[channel2_id] === -7.5;",
									"            ",
									"            tests[\"-5 to -10 medians\"] = ",
									"                data[i].medians[channel1_id] === -7.5 && ",
									"                data[i].medians[channel2_id] === -7.5;",
									"            ",
									"            tests[\"-5 to -10 variances\"] = ",
									"                data[i].variances[channel1_id] === 2.1041666676156363 && ",
									"                data[i].variances[channel2_id] === 2.1041666676156363;",
									"            ",
									"            tests[\"-5 to -10 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 1.4505745991212022 && ",
									"                data[i].standardDeviations[channel2_id] === 1.4505745991212022;",
									"            ",
									"            tests[\"-5 to -10 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -9.92400016784668 && ",
									"                data[i].secondPercentiles[channel2_id] === -9.92400016784668;",
									"            ",
									"            tests[\"-5 to -10 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === -5.075999813079834 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === -5.075999813079834;",
									"            break;",
									"        }",
									"        ",
									"        case -1:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -1 to 1",
									"            tests[\"-1 to 1 minimums\"] = ",
									"                data[i].minimums[channel1_id] === -1 && ",
									"                data[i].minimums[channel2_id] === -1;",
									"            ",
									"            tests[\"-1 to 1 maximums\"] = ",
									"                data[i].maximums[channel1_id] === 1 && ",
									"                data[i].maximums[channel2_id] === 1;",
									"            ",
									"            tests[\"-1 to 1 means\"] = ",
									"                data[i].means[channel1_id] === 0 && ",
									"                data[i].means[channel2_id] === 0;",
									"            ",
									"            tests[\"-1 to 1 medians\"] = ",
									"                data[i].medians[channel1_id] === 0 && ",
									"                data[i].medians[channel2_id] === 0;",
									"            ",
									"            tests[\"-1 to 1 variances\"] = ",
									"                data[i].variances[channel1_id] === 0.33666666695134495 && ",
									"                data[i].variances[channel2_id] === 0.33666666695134495;",
									"            ",
									"            tests[\"-1 to 1 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 0.5802298397629554 && ",
									"                data[i].standardDeviations[channel2_id] === 0.5802298397629554;",
									"            ",
									"            tests[\"-1 to 1 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -0.9696000266075134 && ",
									"                data[i].secondPercentiles[channel2_id] === -0.9696000266075134;",
									"            ",
									"            tests[\"-1 to 1 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 0.9696000266075135 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 0.9696000266075135;",
									"            break;",
									"        }",
									"            ",
									"        case 5:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 5 to 10",
									"            tests[\"5 to 10 minimums\"] = ",
									"                data[i].minimums[channel1_id] === 5 && ",
									"                data[i].minimums[channel2_id] === 5;",
									"            ",
									"            tests[\"5 to 10 maximums\"] = ",
									"                data[i].maximums[channel1_id] === 10 && ",
									"                data[i].maximums[channel2_id] === 10;",
									"            ",
									"            tests[\"5 to 10 means\"] = ",
									"                data[i].means[channel1_id] === 7.5 && ",
									"                data[i].means[channel2_id] === 7.5;",
									"            ",
									"            tests[\"5 to 10 medians\"] = ",
									"                data[i].medians[channel1_id] === 7.5 && ",
									"                data[i].medians[channel2_id] === 7.5;",
									"            ",
									"            tests[\"5 to 10 variances\"] = ",
									"                data[i].variances[channel1_id] === 2.1041666676156363 && ",
									"                data[i].variances[channel2_id] === 2.1041666676156363;",
									"            ",
									"            tests[\"5 to 10 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 1.4505745991212022 && ",
									"                data[i].standardDeviations[channel2_id] === 1.4505745991212022;",
									"            ",
									"            tests[\"5 to 10 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 5.075999813079834 && ",
									"                data[i].secondPercentiles[channel2_id] === 5.075999813079834;",
									"            ",
									"            tests[\"5 to 10 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 9.92400016784668 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 9.92400016784668;",
									"            break;",
									"        }",
									"        ",
									"        case 50:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 50 to 100",
									"            tests[\"50 to 100 minimums\"] = ",
									"                data[i].minimums[channel1_id] === 50 && ",
									"                data[i].minimums[channel2_id] === 50;",
									"            ",
									"            tests[\"50 to 100 maximums\"] = ",
									"                data[i].maximums[channel1_id] === 100 && ",
									"                data[i].maximums[channel2_id] === 100;",
									"            ",
									"            tests[\"50 to 100 means\"] = ",
									"                data[i].means[channel1_id] === 75 && ",
									"                data[i].means[channel2_id] === 75;",
									"            ",
									"            tests[\"50 to 100 medians\"] = ",
									"                data[i].medians[channel1_id] === 75 && ",
									"                data[i].medians[channel2_id] === 75;",
									"            ",
									"            tests[\"50 to 100 variances\"] = ",
									"                data[i].variances[channel1_id] === 210.41666666666666 && ",
									"                data[i].variances[channel2_id] === 210.41666666666666;",
									"            ",
									"            tests[\"50 to 100 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 14.505745987941008 && ",
									"                data[i].standardDeviations[channel2_id] === 14.505745987941008;",
									"            ",
									"            tests[\"50 to 100 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 50.76 && ",
									"                data[i].secondPercentiles[channel2_id] === 50.76;",
									"            ",
									"            tests[\"50 to 100 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 99.24000000000001 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 99.24000000000001;",
									"            break;",
									"        }",
									"        ",
									"        case 500:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 500 to 1000",
									"            tests[\"500 to 1k minimums\"] = ",
									"                data[i].minimums[channel1_id] === 500 && ",
									"                data[i].minimums[channel2_id] === 500;",
									"            ",
									"            tests[\"500 to 1k maximums\"] = ",
									"                data[i].maximums[channel1_id] === 1000 && ",
									"                data[i].maximums[channel2_id] === 1000;",
									"            ",
									"            tests[\"500 to 1k means\"] = ",
									"                data[i].means[channel1_id] === 750 && ",
									"                data[i].means[channel2_id] === 750;",
									"            ",
									"            tests[\"500 to 1k medians\"] = ",
									"                data[i].medians[channel1_id] === 750 && ",
									"                data[i].medians[channel2_id] === 750;",
									"            ",
									"            tests[\"500 to 1k variances\"] = ",
									"                data[i].variances[channel1_id] === 21041.666666666668 && ",
									"                data[i].variances[channel2_id] === 21041.666666666668;",
									"            ",
									"            tests[\"500 to 1k standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 145.0574598794101 && ",
									"                data[i].standardDeviations[channel2_id] === 145.0574598794101;",
									"            ",
									"            tests[\"500 to 1k second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 507.6 && ",
									"                data[i].secondPercentiles[channel2_id] === 507.6;",
									"            ",
									"            tests[\"500 to 1k ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 992.4 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 992.4;",
									"            break;",
									"        }",
									"        ",
									"        case 5000:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 5k to 10k",
									"            tests[\"5k to 10k minimums\"] = ",
									"                data[i].minimums[channel1_id] === 5000 && ",
									"                data[i].minimums[channel2_id] === 5000;",
									"            ",
									"            tests[\"5k to 10k maximums\"] = ",
									"                data[i].maximums[channel1_id] === 10000 && ",
									"                data[i].maximums[channel2_id] === 10000;",
									"            ",
									"            tests[\"5k to 10k means\"] = ",
									"                data[i].means[channel1_id] === 7500 && ",
									"                data[i].means[channel2_id] === 7500;",
									"            ",
									"            tests[\"5k to 10k medians\"] = ",
									"                data[i].medians[channel1_id] === 7500 && ",
									"                data[i].medians[channel2_id] === 7500;",
									"            ",
									"            tests[\"5k to 10k variances\"] = ",
									"                data[i].variances[channel1_id] === 2104166.6666666665 && ",
									"                data[i].variances[channel2_id] === 2104166.6666666665;",
									"            ",
									"            tests[\"5k to 10k standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 1450.574598794101 && ",
									"                data[i].standardDeviations[channel2_id] === 1450.574598794101;",
									"            ",
									"            tests[\"5k to 10k second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 5076 && ",
									"                data[i].secondPercentiles[channel2_id] === 5076;",
									"            ",
									"            tests[\"5k to 10k ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 9924 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 9924;",
									"            break;",
									"        }",
									"        ",
									"        default:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            tests[\"Minimums is empty for 0 event counts\"] = JSON.stringify(data[i].minimums) === \"{}\";",
									"            tests[\"Maximums is empty for 0 event counts\"] = JSON.stringify(data[i].maximums) === \"{}\";",
									"            tests[\"Means is empty for 0 event counts\"] = JSON.stringify(data[i].means) === \"{}\";",
									"            tests[\"Medians is empty for 0 event counts\"] = JSON.stringify(data[i].medians) === \"{}\";",
									"            tests[\"Variances is empty for 0 event counts\"] = JSON.stringify(data[i].variances) === \"{}\";",
									"            tests[\"Standard Deviations is empty for 0 event counts\"] = JSON.stringify(data[i].standardDeviations) === \"{}\";",
									"            tests[\"Second Percentiles is empty for 0 event counts\"] = JSON.stringify(data[i].secondPercentiles) === \"{}\";",
									"            tests[\"Ninety-Eighth Percentiles is empty for 0 event counts\"] = JSON.stringify(data[i].ninetyEighthPercentiles) === \"{}\";",
									"        }    ",
									"    }",
									"}*/",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_2}}&channelIds={{panel_1_channel_id_1}}&channelIds={{panel_1_channel_id_2}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_1}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_2}}"
								}
							]
						},
						"description": "When channelIds are supplied statistics are calculated for each channel for every population.  \n\nThe results of each statistic calculated are keyed on the normalizedShortNameId which can be used to lookup the shortName."
					},
					"response": []
				},
				{
					"name": "Authenticate User -- no access user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"    \"definitions\": {},",
									"    \"id\": \"http://example.com/example.json\",",
									"    \"properties\": {",
									"        \"user\": {",
									"            \"id\": \"/properties/user\",",
									"            \"properties\": {",
									"                \"admin\": {",
									"                    \"id\": \"/properties/user/properties/admin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"authToken\": {",
									"                    \"id\": \"/properties/user/properties/authToken\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"billingAdmin\": {",
									"                    \"id\": \"/properties/user/properties/billingAdmin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"bio\": {",
									"                    \"id\": \"/properties/user/properties/bio\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"createdAt\": {",
									"                    \"id\": \"/properties/user/properties/createdAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"email\": {",
									"                    \"id\": \"/properties/user/properties/email\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"emailVerified\": {",
									"                    \"id\": \"/properties/user/properties/emailVerified\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"firstName\": {",
									"                    \"id\": \"/properties/user/properties/firstName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"hideEmail\": {",
									"                    \"id\": \"/properties/user/properties/hideEmail\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"id\": {",
									"                    \"id\": \"/properties/user/properties/id\",",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"inactive\": {",
									"                    \"id\": \"/properties/user/properties/inactive\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"invisible\": {",
									"                    \"id\": \"/properties/user/properties/invisible\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"lastLoginAt\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastLoginIp\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginIp\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastName\": {",
									"                    \"id\": \"/properties/user/properties/lastName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"location\": {",
									"                    \"id\": \"/properties/user/properties/location\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"organization\": {",
									"                    \"id\": \"/properties/user/properties/organization\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"principalInvestigatorId\": {",
									"                    \"id\": \"/properties/user/properties/principalInvestigatorId\",",
									"                    \"type\": \"null\"",
									"                },",
									"                \"updatedAt\": {",
									"                    \"id\": \"/properties/user/properties/updatedAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"username\": {",
									"                    \"id\": \"/properties/user/properties/username\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"validated\": {",
									"                    \"id\": \"/properties/user/properties/validated\",",
									"                    \"type\": \"boolean\"",
									"                }",
									"            },",
									"            \"type\": \"object\"",
									"        }",
									"    },",
									"    \"type\": \"object\"",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"if(tv4.error !== null){ console.log(tv4.error);}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Show statistics (for specific channels) -- single file -- unauthorized user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Correct error message\"] = data.errors[0] === \"User \" + environment[\"userid\"].toString() + \" is not authorized to access experiment \" + environment[\"experiment_id\"].toString();",
									"tests[\"Different id\"] = environment[\"userid\"] !== 95;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_2}}&channelIds={{panel_1_channel_id_1}}&channelIds={{panel_1_channel_id_2}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_1}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_2}}"
								}
							]
						},
						"description": "When channelIds are supplied statistics are calculated for each channel for every population.  \n\nThe results of each statistic calculated are keyed on the normalizedShortNameId which can be used to lookup the shortName."
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Event count statistics -- Single File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"populationIdentifierKey\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"experimentId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateVersion\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"compensationId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"fcsFileId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateSetId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"eventCount\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"minimums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"maximums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"means\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"medians\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"variances\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"standardDeviations\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"secondPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"ninetyEighthPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"channelShortNameIds\": {",
									"      \"type\": \"array\",",
									"      \"items\": {}",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"populationIdentifierKey\",",
									"    \"experimentId\",",
									"    \"gateVersion\",",
									"    \"compensationId\",",
									"    \"fcsFileId\",",
									"    \"gateSetId\",",
									"    \"eventCount\",",
									"    \"minimums\",",
									"    \"maximums\",",
									"    \"means\",",
									"    \"medians\",",
									"    \"variances\",",
									"    \"standardDeviations\",",
									"    \"secondPercentiles\",",
									"    \"ninetyEighthPercentiles\",",
									"    \"channelShortNameIds\"",
									"  ]",
									"}",
									"",
									"for (var i =0; i < data.length; i++)",
									"{",
									"    tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"    console.log(tv4.error);",
									"    tests[\"Minimums is empty for event counts only\"] = JSON.stringify(data[i].minimums) === \"{}\";",
									"    tests[\"Maximums is empty for event counts only\"] = JSON.stringify(data[i].maximums) === \"{}\";",
									"    tests[\"Means is empty for event counts only\"] = JSON.stringify(data[i].means) === \"{}\";",
									"    tests[\"Medians is empty for event counts only\"] = JSON.stringify(data[i].medians) === \"{}\";",
									"    tests[\"Variances is empty for event counts only\"] = JSON.stringify(data[i].variances) === \"{}\";",
									"    tests[\"Standard Deviations is empty for event counts only\"] = JSON.stringify(data[i].standardDeviations) === \"{}\";",
									"    tests[\"Second Percentiles is empty for event counts only\"] = JSON.stringify(data[i].secondPercentiles) === \"{}\";",
									"    tests[\"Ninety-Eighth Percentiles is empty for event counts only\"] = JSON.stringify(data[i].ninetyEighthPercentiles) === \"{}\";",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_2}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								}
							]
						},
						"description": "If no channels are specified then just event counts for every population are returned"
					},
					"response": []
				},
				{
					"name": "Authenticate User -- no access user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"    \"definitions\": {},",
									"    \"id\": \"http://example.com/example.json\",",
									"    \"properties\": {",
									"        \"user\": {",
									"            \"id\": \"/properties/user\",",
									"            \"properties\": {",
									"                \"admin\": {",
									"                    \"id\": \"/properties/user/properties/admin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"authToken\": {",
									"                    \"id\": \"/properties/user/properties/authToken\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"billingAdmin\": {",
									"                    \"id\": \"/properties/user/properties/billingAdmin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"bio\": {",
									"                    \"id\": \"/properties/user/properties/bio\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"createdAt\": {",
									"                    \"id\": \"/properties/user/properties/createdAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"email\": {",
									"                    \"id\": \"/properties/user/properties/email\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"emailVerified\": {",
									"                    \"id\": \"/properties/user/properties/emailVerified\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"firstName\": {",
									"                    \"id\": \"/properties/user/properties/firstName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"hideEmail\": {",
									"                    \"id\": \"/properties/user/properties/hideEmail\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"id\": {",
									"                    \"id\": \"/properties/user/properties/id\",",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"inactive\": {",
									"                    \"id\": \"/properties/user/properties/inactive\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"invisible\": {",
									"                    \"id\": \"/properties/user/properties/invisible\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"lastLoginAt\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastLoginIp\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginIp\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastName\": {",
									"                    \"id\": \"/properties/user/properties/lastName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"location\": {",
									"                    \"id\": \"/properties/user/properties/location\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"organization\": {",
									"                    \"id\": \"/properties/user/properties/organization\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"principalInvestigatorId\": {",
									"                    \"id\": \"/properties/user/properties/principalInvestigatorId\",",
									"                    \"type\": \"null\"",
									"                },",
									"                \"updatedAt\": {",
									"                    \"id\": \"/properties/user/properties/updatedAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"username\": {",
									"                    \"id\": \"/properties/user/properties/username\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"validated\": {",
									"                    \"id\": \"/properties/user/properties/validated\",",
									"                    \"type\": \"boolean\"",
									"                }",
									"            },",
									"            \"type\": \"object\"",
									"        }",
									"    },",
									"    \"type\": \"object\"",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"if(tv4.error !== null){ console.log(tv4.error);}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Event count statistics -- Single File -- unauthorized user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Correct error message\"] = data.errors[0] === \"User \" + environment[\"userid\"].toString() + \" is not authorized to access experiment \" + environment[\"experiment_id\"].toString();",
									"tests[\"Different id\"] = environment[\"userid\"] !== 95;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_2}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								}
							]
						},
						"description": "If no channels are specified then just event counts for every population are returned"
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Event count statistics -- Multiple Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"populationIdentifierKey\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"experimentId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateVersion\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"compensationId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"fcsFileId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateSetId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"eventCount\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"minimums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"maximums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"means\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"medians\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"variances\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"standardDeviations\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"secondPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"ninetyEighthPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"channelShortNameIds\": {",
									"      \"type\": \"array\",",
									"      \"items\": {}",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"populationIdentifierKey\",",
									"    \"experimentId\",",
									"    \"gateVersion\",",
									"    \"compensationId\",",
									"    \"fcsFileId\",",
									"    \"gateSetId\",",
									"    \"eventCount\",",
									"    \"minimums\",",
									"    \"maximums\",",
									"    \"means\",",
									"    \"medians\",",
									"    \"variances\",",
									"    \"standardDeviations\",",
									"    \"secondPercentiles\",",
									"    \"ninetyEighthPercentiles\",",
									"    \"channelShortNameIds\"",
									"  ]",
									"}",
									"",
									"for (var i =0; i < data.length; i++)",
									"{",
									"    tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"    console.log(tv4.error);",
									"    tests[\"Minimums is empty for event counts only\"] = JSON.stringify(data[i].minimums) === \"{}\";",
									"    tests[\"Maximums is empty for event counts only\"] = JSON.stringify(data[i].maximums) === \"{}\";",
									"    tests[\"Means is empty for event counts only\"] = JSON.stringify(data[i].means) === \"{}\";",
									"    tests[\"Medians is empty for event counts only\"] = JSON.stringify(data[i].medians) === \"{}\";",
									"    tests[\"Variances is empty for event counts only\"] = JSON.stringify(data[i].variances) === \"{}\";",
									"    tests[\"Standard Deviations is empty for event counts only\"] = JSON.stringify(data[i].standardDeviations) === \"{}\";",
									"    tests[\"Second Percentiles is empty for event counts only\"] = JSON.stringify(data[i].secondPercentiles) === \"{}\";",
									"    tests[\"Ninety-Eighth Percentiles is empty for event counts only\"] = JSON.stringify(data[i].ninetyEighthPercentiles) === \"{}\";",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_1}}&fcsFileIds={{fcs_file_id_2}}&fcsFileIds={{fcs_file_id_3}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_1}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_3}}"
								}
							]
						},
						"description": "If no channels are specified then just event counts for every population are returned"
					},
					"response": []
				},
				{
					"name": "Authenticate User -- no access user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"    \"definitions\": {},",
									"    \"id\": \"http://example.com/example.json\",",
									"    \"properties\": {",
									"        \"user\": {",
									"            \"id\": \"/properties/user\",",
									"            \"properties\": {",
									"                \"admin\": {",
									"                    \"id\": \"/properties/user/properties/admin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"authToken\": {",
									"                    \"id\": \"/properties/user/properties/authToken\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"billingAdmin\": {",
									"                    \"id\": \"/properties/user/properties/billingAdmin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"bio\": {",
									"                    \"id\": \"/properties/user/properties/bio\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"createdAt\": {",
									"                    \"id\": \"/properties/user/properties/createdAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"email\": {",
									"                    \"id\": \"/properties/user/properties/email\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"emailVerified\": {",
									"                    \"id\": \"/properties/user/properties/emailVerified\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"firstName\": {",
									"                    \"id\": \"/properties/user/properties/firstName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"hideEmail\": {",
									"                    \"id\": \"/properties/user/properties/hideEmail\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"id\": {",
									"                    \"id\": \"/properties/user/properties/id\",",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"inactive\": {",
									"                    \"id\": \"/properties/user/properties/inactive\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"invisible\": {",
									"                    \"id\": \"/properties/user/properties/invisible\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"lastLoginAt\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastLoginIp\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginIp\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastName\": {",
									"                    \"id\": \"/properties/user/properties/lastName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"location\": {",
									"                    \"id\": \"/properties/user/properties/location\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"organization\": {",
									"                    \"id\": \"/properties/user/properties/organization\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"principalInvestigatorId\": {",
									"                    \"id\": \"/properties/user/properties/principalInvestigatorId\",",
									"                    \"type\": \"null\"",
									"                },",
									"                \"updatedAt\": {",
									"                    \"id\": \"/properties/user/properties/updatedAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"username\": {",
									"                    \"id\": \"/properties/user/properties/username\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"validated\": {",
									"                    \"id\": \"/properties/user/properties/validated\",",
									"                    \"type\": \"boolean\"",
									"                }",
									"            },",
									"            \"type\": \"object\"",
									"        }",
									"    },",
									"    \"type\": \"object\"",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"if(tv4.error !== null){ console.log(tv4.error);}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Event count statistics -- Multiple Files -- unauthorized user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Correct error message\"] = data.errors[0] === \"User \" + environment[\"userid\"].toString() + \" is not authorized to access experiment \" + environment[\"experiment_id\"].toString();",
									"tests[\"Different id\"] = environment[\"userid\"] !== 95;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_1}}&fcsFileIds={{fcs_file_id_2}}&fcsFileIds={{fcs_file_id_3}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_1}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_3}}"
								}
							]
						},
						"description": "If no channels are specified then just event counts for every population are returned"
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"user\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"username\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"location\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"organization\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"bio\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"principalInvestigatorId\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"hideEmail\": {",
									"          \"type\": \"boolean\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginAt\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"lastLoginIp\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"authToken\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"username\",",
									"        // \"location\",",
									"        // \"organization\",",
									"        // \"bio\",",
									"        \"firstName\",",
									"        \"lastName\",",
									"        \"email\",",
									"        \"principalInvestigatorId\",",
									"        \"hideEmail\",",
									"        \"createdAt\",",
									"        \"updatedAt\",",
									"        \"lastLoginAt\",",
									"        \"lastLoginIp\",",
									"        \"authToken\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"user\"",
									"  ]",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"//console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{user_name}}\",\n    \"password\": \"{{userpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Show statistics  (multiple files & channels)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"var schema =  {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"populationIdentifierKey\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"experimentId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateVersion\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"compensationId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"fcsFileId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"gateSetId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"eventCount\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"minimums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"maximums\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"means\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"medians\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"variances\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"standardDeviations\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"secondPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"ninetyEighthPercentiles\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {}",
									"    },",
									"    \"channelShortNameIds\": {",
									"      \"type\": \"array\",",
									"      \"items\": {}",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"populationIdentifierKey\",",
									"    \"experimentId\",",
									"    \"gateVersion\",",
									"    \"compensationId\",",
									"    \"fcsFileId\",",
									"    \"gateSetId\",",
									"    \"eventCount\",",
									"    \"minimums\",",
									"    \"maximums\",",
									"    \"means\",",
									"    \"medians\",",
									"    \"variances\",",
									"    \"standardDeviations\",",
									"    \"secondPercentiles\",",
									"    \"ninetyEighthPercentiles\",",
									"    \"channelShortNameIds\"",
									"  ]",
									"}",
									"",
									"// get channel ids",
									"/*var channel1_id = data[0].channelShortNameIds[0];",
									"var channel2_id = data[0].channelShortNameIds[1];",
									"",
									"for (var i =0; i < data.length; i++)",
									"{",
									"    var range = data[i].minimums[channel1_id];",
									"    switch (range)",
									"    {",
									"        ",
									"        case -10000:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"                console.log(tv4.error);",
									"            ",
									"            if (data[i].maximums[channel1_id] === 10000)",
									"            {",
									"                // -10k to 10k",
									"                tests[\"-10k to 10k minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -10000 && ",
									"                    data[i].minimums[channel2_id] === -10000;",
									"            ",
									"                tests[\"-10k to 10k maximums\"] = ",
									"                    data[i].maximums[channel1_id] === 10000 && ",
									"                    data[i].maximums[channel2_id] === 10000;",
									"                ",
									"                tests[\"-10k to 10k means\"] = ",
									"                    data[i].means[channel1_id] === 0 && ",
									"                    data[i].means[channel2_id] === 0;",
									"                ",
									"                tests[\"-10k to 10k medians\"] = ",
									"                    data[i].medians[channel1_id] === 0 && ",
									"                    data[i].medians[channel2_id] === 0;",
									"                ",
									"                tests[\"-10k to 10k variances\"] = ",
									"                    data[i].variances[channel1_id] === 13098578.282777773 && ",
									"                    data[i].variances[channel2_id] === 13098578.282777773;",
									"                ",
									"                tests[\"-10k to 10k standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 3619.195806084243 && ",
									"                    data[i].standardDeviations[channel2_id] === 3619.195806084243;",
									"                ",
									"                tests[\"-10k to 10k second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -9120 && ",
									"                    data[i].secondPercentiles[channel2_id] === -9120;",
									"                ",
									"                tests[\"-10k to 10k ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === 9119.999999999998 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === 9119.999999999998;",
									"            }",
									"            ",
									"            else if (data[i].maximums[channel1_id] === -5000)",
									"            {",
									"                // -5k to -10k",
									"                tests[\"-5k to -10k minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -10000 && ",
									"                    data[i].minimums[channel2_id] === -10000;",
									"                ",
									"                tests[\"-5k to -10k maximums\"] = ",
									"                    data[i].maximums[channel1_id] === -5000 && ",
									"                    data[i].maximums[channel2_id] === -5000;",
									"                ",
									"                tests[\"-5k to -10k means\"] = ",
									"                    data[i].means[channel1_id] === -7500 && ",
									"                    data[i].means[channel2_id] === -7500;",
									"                ",
									"                tests[\"-5k to -10k medians\"] = ",
									"                    data[i].medians[channel1_id] === -7500 && ",
									"                    data[i].medians[channel2_id] === -7500;",
									"                ",
									"                tests[\"-5k to -10k variances\"] = ",
									"                    data[i].variances[channel1_id] === 2104166.6666666665 && ",
									"                    data[i].variances[channel2_id] === 2104166.6666666665;",
									"                ",
									"                tests[\"-5k to -10k standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 1450.574598794101 && ",
									"                    data[i].standardDeviations[channel2_id] === 1450.574598794101;",
									"                ",
									"                tests[\"-5k to -10k second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -9924 && ",
									"                    data[i].secondPercentiles[channel2_id] === -9924;",
									"                ",
									"                tests[\"-5k to -10k ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === -5076 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === -5076;",
									"            }",
									"            ",
									"            else if (data[i].maximums[channel1_id] === 1)",
									"            {",
									"                // -10k to 1",
									"                tests[\"-10k to 1 minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -10000 && ",
									"                    data[i].minimums[channel2_id] === -10000;",
									"                    ",
									"                tests[\"-10k to 1 maximums\"] = ",
									"                    data[i].maximums[channel1_id] === 1 && ",
									"                    data[i].maximums[channel2_id] === 1;",
									"                ",
									"                tests[\"-10k to 1 means\"] = ",
									"                    data[i].means[channel1_id] === -1666.5 && ",
									"                    data[i].means[channel2_id] === -1666.5;",
									"                ",
									"                tests[\"-10k to 1 medians\"] = ",
									"                    data[i].medians[channel1_id] === -75 && ",
									"                    data[i].medians[channel2_id] === -75;",
									"                ",
									"                tests[\"-10k to 1 variances\"] = ",
									"                    data[i].variances[channel1_id] === 9011498.238166671 && ",
									"                    data[i].variances[channel2_id] === 9011498.238166671;",
									"                ",
									"                tests[\"-10k to 1 standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 3001.9157613375282 && ",
									"                    data[i].standardDeviations[channel2_id] === 3001.9157613375282;",
									"                ",
									"                tests[\"-10k to 1 second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -9522 && ",
									"                    data[i].secondPercentiles[channel2_id] === -9522;",
									"                ",
									"                tests[\"-10k to 1 ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === 0.8088000035285949 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === 0.8088000035285949;",
									"            }",
									"            break;",
									"        }",
									"            ",
									"        case -1000:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -500 to -1000",
									"            tests[\"-500 to -1k minimums\"] = ",
									"                data[i].minimums[channel1_id] === -1000 && ",
									"                data[i].minimums[channel2_id] === -1000;",
									"            ",
									"            tests[\"-500 to -1k maximums\"] = ",
									"                data[i].maximums[channel1_id] === -500 && ",
									"                data[i].maximums[channel2_id] === -500;",
									"            ",
									"            tests[\"-500 to -1k means\"] = ",
									"                data[i].means[channel1_id] === -750 && ",
									"                data[i].means[channel2_id] === -750;",
									"            ",
									"            tests[\"-500 to -1k medians\"] = ",
									"                data[i].medians[channel1_id] === -750 && ",
									"                data[i].medians[channel2_id] === -750;",
									"            ",
									"            tests[\"-500 to -1k variances\"] = ",
									"                data[i].variances[channel1_id] === 21041.666666666668 && ",
									"                data[i].variances[channel2_id] === 21041.666666666668;",
									"            ",
									"            tests[\"-500 to -1k standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 145.0574598794101 && ",
									"                data[i].standardDeviations[channel2_id] === 145.0574598794101;",
									"            ",
									"            tests[\"-500 to -1k second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -992.4 && ",
									"                data[i].secondPercentiles[channel2_id] === -992.4;",
									"            ",
									"            tests[\"-500 to -1k ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === -507.59999999999997 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === -507.59999999999997;",
									"            break;",
									"        }",
									"        ",
									"        case -100:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -50 to -100",
									"            tests[\"-50 to -100 minimums\"] = ",
									"                data[i].minimums[channel1_id] === -100 && ",
									"                data[i].minimums[channel2_id] === -100;",
									"            ",
									"            tests[\"-50 to -100 maximums\"] = ",
									"                data[i].maximums[channel1_id] === -50 && ",
									"                data[i].maximums[channel2_id] === -50;",
									"            ",
									"            tests[\"-50 to -100 means\"] = ",
									"                data[i].means[channel1_id] === -75 && ",
									"                data[i].means[channel2_id] === -75;",
									"            ",
									"            tests[\"-50 to -100 medians\"] = ",
									"                data[i].medians[channel1_id] === -75 && ",
									"                data[i].medians[channel2_id] === -75;",
									"            ",
									"            tests[\"-50 to -100 variances\"] = ",
									"                data[i].variances[channel1_id] === 210.41666666666666 && ",
									"                data[i].variances[channel2_id] === 210.41666666666666;",
									"            ",
									"            tests[\"-50 to -100 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 14.505745987941008 && ",
									"                data[i].standardDeviations[channel2_id] === 14.505745987941008;",
									"            ",
									"            tests[\"-50 to -100 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -99.24 && ",
									"                data[i].secondPercentiles[channel2_id] === -99.24;",
									"            ",
									"            tests[\"-50 to -100 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === -50.76 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === -50.76;",
									"            break;",
									"        }",
									"            ",
									"        case -10:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -5 to -10",
									"            tests[\"-5 to -10 minimums\"] = ",
									"                data[i].minimums[channel1_id] === -10 && ",
									"                data[i].minimums[channel2_id] === -10;",
									"            ",
									"            tests[\"-5 to -10 maximums\"] = ",
									"                data[i].maximums[channel1_id] === -5 && ",
									"                data[i].maximums[channel2_id] === -5;",
									"            ",
									"            tests[\"-5 to -10 means\"] = ",
									"                data[i].means[channel1_id] === -7.5 && ",
									"                data[i].means[channel2_id] === -7.5;",
									"            ",
									"            tests[\"-5 to -10 medians\"] = ",
									"                data[i].medians[channel1_id] === -7.5 && ",
									"                data[i].medians[channel2_id] === -7.5;",
									"            ",
									"            tests[\"-5 to -10 variances\"] = ",
									"                data[i].variances[channel1_id] === 2.1041666676156363 && ",
									"                data[i].variances[channel2_id] === 2.1041666676156363;",
									"            ",
									"            tests[\"-5 to -10 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 1.4505745991212022 && ",
									"                data[i].standardDeviations[channel2_id] === 1.4505745991212022;",
									"            ",
									"            tests[\"-5 to -10 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === -9.92400016784668 && ",
									"                data[i].secondPercentiles[channel2_id] === -9.92400016784668;",
									"            ",
									"            tests[\"-5 to -10 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === -5.075999813079834 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === -5.075999813079834;",
									"            break;",
									"        }",
									"        ",
									"        case -1:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // -1 to 1",
									"            if (data[i].maximums[channel1_id] === 1)",
									"            {",
									"                tests[\"-1 to 1 minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -1 && ",
									"                    data[i].minimums[channel2_id] === -1;",
									"                ",
									"                tests[\"-1 to 1 maximums\"] = ",
									"                    data[i].maximums[channel1_id] === 1 && ",
									"                    data[i].maximums[channel2_id] === 1;",
									"                ",
									"                tests[\"-1 to 1 means\"] = ",
									"                    data[i].means[channel1_id] === 0 && ",
									"                    data[i].means[channel2_id] === 0;",
									"                ",
									"                tests[\"-1 to 1 medians\"] = ",
									"                    data[i].medians[channel1_id] === 0 && ",
									"                    data[i].medians[channel2_id] === 0;",
									"                ",
									"                tests[\"-1 to 1 variances\"] = ",
									"                    data[i].variances[channel1_id] === 0.33666666695134495 && ",
									"                    data[i].variances[channel2_id] === 0.33666666695134495;",
									"                ",
									"                tests[\"-1 to 1 standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 0.5802298397629554 && ",
									"                    data[i].standardDeviations[channel2_id] === 0.5802298397629554;",
									"                ",
									"                tests[\"-1 to 1 second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -0.9696000266075134 && ",
									"                    data[i].secondPercentiles[channel2_id] === -0.9696000266075134;",
									"                ",
									"                tests[\"-1 to 1 ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === 0.9696000266075135 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === 0.9696000266075135;",
									"            }",
									"            else if (data[i].maximums[channel1_id] === 10000)",
									"            {",
									"                tests[\"-1 to 10k minimums\"] = ",
									"                    data[i].minimums[channel1_id] === -1 && ",
									"                    data[i].minimums[channel2_id] === -1;",
									"                ",
									"                tests[\"-1 to 10k maximums\"] = ",
									"                    data[i].maximums[channel1_id] === 10000 && ",
									"                    data[i].maximums[channel2_id] === 10000;",
									"                ",
									"                tests[\"-1 to 10k means\"] = ",
									"                    data[i].means[channel1_id] === 1666.5 && ",
									"                    data[i].means[channel2_id] === 1666.5;",
									"                ",
									"                tests[\"-1 to 10k medians\"] = ",
									"                    data[i].medians[channel1_id] === 75 && ",
									"                    data[i].medians[channel2_id] === 75;",
									"                ",
									"                tests[\"-1 to 10k variances\"] = ",
									"                    data[i].variances[channel1_id] === 9011498.238166671 && ",
									"                    data[i].variances[channel2_id] === 9011498.238166671;",
									"                ",
									"                tests[\"-1 to 10k standard deviations\"] = ",
									"                    data[i].standardDeviations[channel1_id] === 3001.9157613375282 && ",
									"                    data[i].standardDeviations[channel2_id] === 3001.9157613375282;",
									"                ",
									"                tests[\"-1 to 10k second percentiles\"] = ",
									"                    data[i].secondPercentiles[channel1_id] === -0.8088000035285949 && ",
									"                    data[i].secondPercentiles[channel2_id] === -0.80880000352859494;",
									"                ",
									"                tests[\"-1 to 10k ninety-eighth percentiles\"] = ",
									"                    data[i].ninetyEighthPercentiles[channel1_id] === 9522 && ",
									"                    data[i].ninetyEighthPercentiles[channel2_id] === 9522;",
									"            }",
									"            break;",
									"        }",
									"            ",
									"        case 5:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 5 to 10",
									"            tests[\"5 to 10 minimums\"] = ",
									"                data[i].minimums[channel1_id] === 5 && ",
									"                data[i].minimums[channel2_id] === 5;",
									"            ",
									"            tests[\"5 to 10 maximums\"] = ",
									"                data[i].maximums[channel1_id] === 10 && ",
									"                data[i].maximums[channel2_id] === 10;",
									"            ",
									"            tests[\"5 to 10 means\"] = ",
									"                data[i].means[channel1_id] === 7.5 && ",
									"                data[i].means[channel2_id] === 7.5;",
									"            ",
									"            tests[\"5 to 10 medians\"] = ",
									"                data[i].medians[channel1_id] === 7.5 && ",
									"                data[i].medians[channel2_id] === 7.5;",
									"            ",
									"            tests[\"5 to 10 variances\"] = ",
									"                data[i].variances[channel1_id] === 2.1041666676156363 && ",
									"                data[i].variances[channel2_id] === 2.1041666676156363;",
									"            ",
									"            tests[\"5 to 10 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 1.4505745991212022 && ",
									"                data[i].standardDeviations[channel2_id] === 1.4505745991212022;",
									"            ",
									"            tests[\"5 to 10 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 5.075999813079834 && ",
									"                data[i].secondPercentiles[channel2_id] === 5.075999813079834;",
									"            ",
									"            tests[\"5 to 10 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 9.92400016784668 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 9.92400016784668;",
									"            break;",
									"        }",
									"        ",
									"        case 50:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 50 to 100",
									"            tests[\"50 to 100 minimums\"] = ",
									"                data[i].minimums[channel1_id] === 50 && ",
									"                data[i].minimums[channel2_id] === 50;",
									"            ",
									"            tests[\"50 to 100 maximums\"] = ",
									"                data[i].maximums[channel1_id] === 100 && ",
									"                data[i].maximums[channel2_id] === 100;",
									"            ",
									"            tests[\"50 to 100 means\"] = ",
									"                data[i].means[channel1_id] === 75 && ",
									"                data[i].means[channel2_id] === 75;",
									"            ",
									"            tests[\"50 to 100 medians\"] = ",
									"                data[i].medians[channel1_id] === 75 && ",
									"                data[i].medians[channel2_id] === 75;",
									"            ",
									"            tests[\"50 to 100 variances\"] = ",
									"                data[i].variances[channel1_id] === 210.41666666666666 && ",
									"                data[i].variances[channel2_id] === 210.41666666666666;",
									"            ",
									"            tests[\"50 to 100 standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 14.505745987941008 && ",
									"                data[i].standardDeviations[channel2_id] === 14.505745987941008;",
									"            ",
									"            tests[\"50 to 100 second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 50.76 && ",
									"                data[i].secondPercentiles[channel2_id] === 50.76;",
									"            ",
									"            tests[\"50 to 100 ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 99.24000000000001 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 99.24000000000001;",
									"            break;",
									"        }",
									"        ",
									"        case 500:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 500 to 1000",
									"            tests[\"500 to 1k minimums\"] = ",
									"                data[i].minimums[channel1_id] === 500 && ",
									"                data[i].minimums[channel2_id] === 500;",
									"            ",
									"            tests[\"500 to 1k maximums\"] = ",
									"                data[i].maximums[channel1_id] === 1000 && ",
									"                data[i].maximums[channel2_id] === 1000;",
									"            ",
									"            tests[\"500 to 1k means\"] = ",
									"                data[i].means[channel1_id] === 750 && ",
									"                data[i].means[channel2_id] === 750;",
									"            ",
									"            tests[\"500 to 1k medians\"] = ",
									"                data[i].medians[channel1_id] === 750 && ",
									"                data[i].medians[channel2_id] === 750;",
									"            ",
									"            tests[\"500 to 1k variances\"] = ",
									"                data[i].variances[channel1_id] === 21041.666666666668 && ",
									"                data[i].variances[channel2_id] === 21041.666666666668;",
									"            ",
									"            tests[\"500 to 1k standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 145.0574598794101 && ",
									"                data[i].standardDeviations[channel2_id] === 145.0574598794101;",
									"            ",
									"            tests[\"500 to 1k second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 507.6 && ",
									"                data[i].secondPercentiles[channel2_id] === 507.6;",
									"            ",
									"            tests[\"500 to 1k ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 992.4 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 992.4;",
									"            break;",
									"        }",
									"        ",
									"        case 5000:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            // 5k to 10k",
									"            tests[\"5k to 10k minimums\"] = ",
									"                data[i].minimums[channel1_id] === 5000 && ",
									"                data[i].minimums[channel2_id] === 5000;",
									"            ",
									"            tests[\"5k to 10k maximums\"] = ",
									"                data[i].maximums[channel1_id] === 10000 && ",
									"                data[i].maximums[channel2_id] === 10000;",
									"            ",
									"            tests[\"5k to 10k means\"] = ",
									"                data[i].means[channel1_id] === 7500 && ",
									"                data[i].means[channel2_id] === 7500;",
									"            ",
									"            tests[\"5k to 10k medians\"] = ",
									"                data[i].medians[channel1_id] === 7500 && ",
									"                data[i].medians[channel2_id] === 7500;",
									"            ",
									"            tests[\"5k to 10k variances\"] = ",
									"                data[i].variances[channel1_id] === 2104166.6666666665 && ",
									"                data[i].variances[channel2_id] === 2104166.6666666665;",
									"            ",
									"            tests[\"5k to 10k standard deviations\"] = ",
									"                data[i].standardDeviations[channel1_id] === 1450.574598794101 && ",
									"                data[i].standardDeviations[channel2_id] === 1450.574598794101;",
									"            ",
									"            tests[\"5k to 10k second percentiles\"] = ",
									"                data[i].secondPercentiles[channel1_id] === 5076 && ",
									"                data[i].secondPercentiles[channel2_id] === 5076;",
									"            ",
									"            tests[\"5k to 10k ninety-eighth percentiles\"] = ",
									"                data[i].ninetyEighthPercentiles[channel1_id] === 9924 && ",
									"                data[i].ninetyEighthPercentiles[channel2_id] === 9924;",
									"            break;",
									"        }",
									"        ",
									"        default:",
									"        {",
									"            tests[\"Validate statistics schema\"] = tv4.validate(data[i], schema);",
									"            console.log(tv4.error);",
									"            tests[\"Minimums is empty for 0 event counts\"] = JSON.stringify(data[i].minimums) === \"{}\";",
									"            tests[\"Maximums is empty for 0 event counts\"] = JSON.stringify(data[i].maximums) === \"{}\";",
									"            tests[\"Means is empty for 0 event counts\"] = JSON.stringify(data[i].means) === \"{}\";",
									"            tests[\"Medians is empty for 0 event counts\"] = JSON.stringify(data[i].medians) === \"{}\";",
									"            tests[\"Variances is empty for 0 event counts\"] = JSON.stringify(data[i].variances) === \"{}\";",
									"            tests[\"Standard Deviations is empty for 0 event counts\"] = JSON.stringify(data[i].standardDeviations) === \"{}\";",
									"            tests[\"Second Percentiles is empty for 0 event counts\"] = JSON.stringify(data[i].secondPercentiles) === \"{}\";",
									"            tests[\"Ninety-Eighth Percentiles is empty for 0 event counts\"] = JSON.stringify(data[i].ninetyEighthPercentiles) === \"{}\";",
									"        }    ",
									"    }",
									"}*/",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id_1}}&fcsFileIds={{fcs_file_id_2}}&fcsFileIds={{fcs_file_id_3}}&channelIds={{panel_1_channel_id_1}}&channelIds={{panel_1_channel_id_2}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_1}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_2}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id_3}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_1}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_2}}"
								}
							]
						},
						"description": "If no channels are specified then just event counts for every population are returned"
					},
					"response": []
				},
				{
					"name": "Authenticate User -- no access user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"user_jwt\", data.user.authToken);",
									"postman.setGlobalVariable(\"user_jwt\", data.user.authToken);",
									"postman.setEnvironmentVariable(\"userid\", data.user.id);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"tests[\"Response body contains authToken\"] = responseBody.has(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.\");",
									"if (data.user.id > 2){",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id - 1);",
									"}else{",
									"    postman.setEnvironmentVariable(\"other_usersid\", data.user.id + 1);",
									"}",
									"var schema = {",
									"    \"definitions\": {},",
									"    \"id\": \"http://example.com/example.json\",",
									"    \"properties\": {",
									"        \"user\": {",
									"            \"id\": \"/properties/user\",",
									"            \"properties\": {",
									"                \"admin\": {",
									"                    \"id\": \"/properties/user/properties/admin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"authToken\": {",
									"                    \"id\": \"/properties/user/properties/authToken\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"billingAdmin\": {",
									"                    \"id\": \"/properties/user/properties/billingAdmin\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"bio\": {",
									"                    \"id\": \"/properties/user/properties/bio\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"createdAt\": {",
									"                    \"id\": \"/properties/user/properties/createdAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"email\": {",
									"                    \"id\": \"/properties/user/properties/email\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"emailVerified\": {",
									"                    \"id\": \"/properties/user/properties/emailVerified\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"firstName\": {",
									"                    \"id\": \"/properties/user/properties/firstName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"hideEmail\": {",
									"                    \"id\": \"/properties/user/properties/hideEmail\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"id\": {",
									"                    \"id\": \"/properties/user/properties/id\",",
									"                    \"type\": \"integer\"",
									"                },",
									"                \"inactive\": {",
									"                    \"id\": \"/properties/user/properties/inactive\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"invisible\": {",
									"                    \"id\": \"/properties/user/properties/invisible\",",
									"                    \"type\": \"boolean\"",
									"                },",
									"                \"lastLoginAt\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastLoginIp\": {",
									"                    \"id\": \"/properties/user/properties/lastLoginIp\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"lastName\": {",
									"                    \"id\": \"/properties/user/properties/lastName\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"location\": {",
									"                    \"id\": \"/properties/user/properties/location\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"organization\": {",
									"                    \"id\": \"/properties/user/properties/organization\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"principalInvestigatorId\": {",
									"                    \"id\": \"/properties/user/properties/principalInvestigatorId\",",
									"                    \"type\": \"null\"",
									"                },",
									"                \"updatedAt\": {",
									"                    \"id\": \"/properties/user/properties/updatedAt\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"username\": {",
									"                    \"id\": \"/properties/user/properties/username\",",
									"                    \"type\": \"string\"",
									"                },",
									"                \"validated\": {",
									"                    \"id\": \"/properties/user/properties/validated\",",
									"                    \"type\": \"boolean\"",
									"                }",
									"            },",
									"            \"type\": \"object\"",
									"        }",
									"    },",
									"    \"type\": \"object\"",
									"};",
									"",
									"tests[\"Validate authenticate user schema\"] = tv4.validate(data, schema);",
									"if(tv4.error !== null){ console.log(tv4.error);}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "charset",
								"value": "UTF-8"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
						},
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"api",
								"v1",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						},
						{
							"name": "authenticate-user.json",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "charset",
										"value": "UTF-8"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{adminuser}}\",\n    \"password\": \"{{adminpassword}}\"\n}"
								},
								"url": {
									"raw": "https://{{cyto_server}}/cytobank/api/v1/authenticate",
									"protocol": "https",
									"host": [
										"{{cyto_server}}"
									],
									"path": [
										"cytobank",
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"header": [
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "758",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2016 05:20:43 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "\"8864d52516a23f4b44bda1b304617730\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31622400; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": ""
								},
								{
									"key": "X-Runtime",
									"value": "0.769000",
									"name": "X-Runtime",
									"description": ""
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=Edge,chrome=1",
									"name": "X-UA-Compatible",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"user\":{\"id\":110,\"username\":\"swapnil01\",\"location\":\"Mountain View, CA\",\"organization\":\"Cytobank Inc.\",\"twitter\":\"\",\"bio\":\"\",\"firstName\":\"Swapnil01dev01\",\"lastName\":\"Patne01\",\"email\":\"swapnil+1dev01@cytobank.org\",\"principalInvestigatorId\":null,\"hideEmail\":true,\"createdAt\":\"2016-03-29T12:52:21Z\",\"updatedAt\":\"2016-05-23T05:20:43Z\",\"lastLoginAt\":\"2016-05-13T08:58:05Z\",\"lastLoginIp\":\"49.248.212.18\",\"authToken\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1NTU2YjM1MzE4MGVjYjcyMDMyM2M2OTlkMjRjZWJkMCIsImV4cCI6MTQ2NDAwOTY0MiwiYXVkIjoiY3l0b2JhbmtfYXBpX3YxX3VzZXJzIiwidXNlcl9pZCI6MTEwLCJpYXQiOjE0NjM5ODA4NDIsImlzcyI6Imh0dHBzOi8vZGV2MDEuY3l0b2Jhbmsub3JnLyIsIm5iZiI6MTQ2Mzk4MDg0Miwic3ViIjoiY3l0b2JhbmtfYXBpX3YxIn0.cv_PllzIhwqdKdwFVaoG9ME_PrK1y0qdgQ5Q0MXue44\"}}"
						}
					]
				},
				{
					"name": "Show statistics  (multiple files & channels) -- unauthorized user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"HSTS header is present\"] = postman.getResponseHeader(\"Strict-Transport-Security\") === \"max-age=31622400; includeSubDomains; preload\";",
									"",
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"Correct error message\"] = data.errors[0] === \"User \" + environment[\"userid\"].toString() + \" is not authorized to access experiment \" + environment[\"experiment_id\"].toString();",
									"tests[\"Different id\"] = environment[\"userid\"] !== 95;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_jwt}}"
							}
						],
						"url": {
							"raw": "https://{{cyto_server}}/cytobank/statistics?experimentId={{experiment_id}}&gateVersion={{gate_version}}&experimentVersion={{exp_version}}&compensationId={{compensation_id}}&fcsFileIds={{fcs_file_id}}&fcsFileIds={{fcs_file_2_id}}&fcsFileIds={{fcs_file_3_id}}&channelIds={{panel_1_channel_id_1}}&channelIds={{panel_1_channel_id_2}}",
							"protocol": "https",
							"host": [
								"{{cyto_server}}"
							],
							"path": [
								"cytobank",
								"statistics"
							],
							"query": [
								{
									"key": "experimentId",
									"value": "{{experiment_id}}"
								},
								{
									"key": "gateVersion",
									"value": "{{gate_version}}"
								},
								{
									"key": "experimentVersion",
									"value": "{{exp_version}}"
								},
								{
									"key": "compensationId",
									"value": "{{compensation_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_2_id}}"
								},
								{
									"key": "fcsFileIds",
									"value": "{{fcs_file_3_id}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_1}}"
								},
								{
									"key": "channelIds",
									"value": "{{panel_1_channel_id_2}}"
								}
							]
						},
						"description": "If no channels are specified then just event counts for every population are returned"
					},
					"response": []
				}
			]
		}
	]
}